
stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001278  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001428  08001428  00011428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014ec  080014ec  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014ec  080014ec  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014ec  080014ec  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014ec  080014ec  000114ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014f0  080014f0  000114f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001558  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001558  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021ac  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000624  00000000  00000000  00022240  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00022868  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  000229a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000027c6  00000000  00000000  00022ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012d7  00000000  00000000  00025276  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008881  00000000  00000000  0002654d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002edce  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b34  00000000  00000000  0002ee4c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001410 	.word	0x08001410

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001410 	.word	0x08001410

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <dallanBakalim>:
#define STACK_MSP_END   		(STACK_MSP_START - 512)
#define STACK_PSP_START 		STACK_MSP_END

// LR yi kontrol amaçlı yazılan fonksiyon
int dallanBakalim(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
	puts("Dallandi");
 8000294:	4802      	ldr	r0, [pc, #8]	; (80002a0 <dallanBakalim+0x10>)
 8000296:	f000 f9e7 	bl	8000668 <puts>
	return 2;
 800029a:	2302      	movs	r3, #2
}
 800029c:	4618      	mov	r0, r3
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	08001428 	.word	0x08001428

080002a4 <fun_add>:

int fun_add(int a, int b , int c , int d)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b086      	sub	sp, #24
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	60f8      	str	r0, [r7, #12]
 80002ac:	60b9      	str	r1, [r7, #8]
 80002ae:	607a      	str	r2, [r7, #4]
 80002b0:	603b      	str	r3, [r7, #0]
	int x;
	int *xPtr = &x;
 80002b2:	f107 0310 	add.w	r3, r7, #16
 80002b6:	617b      	str	r3, [r7, #20]

	dallanBakalim();
 80002b8:	f7ff ffea 	bl	8000290 <dallanBakalim>

	return a+b+c+d;
 80002bc:	68fa      	ldr	r2, [r7, #12]
 80002be:	68bb      	ldr	r3, [r7, #8]
 80002c0:	441a      	add	r2, r3
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	441a      	add	r2, r3
 80002c6:	683b      	ldr	r3, [r7, #0]
 80002c8:	4413      	add	r3, r2
}
 80002ca:	4618      	mov	r0, r3
 80002cc:	3718      	adds	r7, #24
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}
	...

080002d4 <change_sp_to_psp>:
/* this function changes SP to PSP */
__attribute__((naked)) void change_sp_to_psp(void)
{
	__asm volatile(".equ SRAM_END, (0x20000000 + ( 128 * 1024))");
	__asm volatile(".equ PSP_START , (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 80002d4:	4804      	ldr	r0, [pc, #16]	; (80002e8 <change_sp_to_psp+0x14>)
	//__asm volatile("MSR PSP, %0" : : "r"(PSP_START) : );
	//Böyle yapamamanın nedeni PSP_START ın macros gibi sabit değer olması,
	//Yani R0 bir reg olduğu için PSP ye atılabiliyor.
	//Bunun için int PSP_START yapılabilirdi başta eğer attribute olmasaydı...
	__asm volatile("MSR PSP, R0");
 80002d6:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0,#0X02");
 80002da:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL,R0");
 80002de:	f380 8814 	msr	CONTROL, r0
	__asm volatile("BX LR");
 80002e2:	4770      	bx	lr

}
 80002e4:	bf00      	nop
 80002e6:	0000      	.short	0x0000
 80002e8:	2001fe00 	.word	0x2001fe00

080002ec <generate_exception>:

void generate_exception(void)
{
 80002ec:	b480      	push	{r7}
 80002ee:	af00      	add	r7, sp, #0
	/* execute SVC instruction to cause SVC exception */
	__asm volatile("SVC #0X2");
 80002f0:	df02      	svc	2
}
 80002f2:	bf00      	nop
 80002f4:	46bd      	mov	sp, r7
 80002f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fa:	4770      	bx	lr

080002fc <main>:

int main(void)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b082      	sub	sp, #8
 8000300:	af00      	add	r7, sp, #0
	change_sp_to_psp();
 8000302:	f7ff ffe7 	bl	80002d4 <change_sp_to_psp>

/* from here onwards PSP will be used for stack activities */
	int ret;

	int *pret = &ret;
 8000306:	463b      	mov	r3, r7
 8000308:	607b      	str	r3, [r7, #4]

	ret = fun_add(1, 4, 5, 6);
 800030a:	2306      	movs	r3, #6
 800030c:	2205      	movs	r2, #5
 800030e:	2104      	movs	r1, #4
 8000310:	2001      	movs	r0, #1
 8000312:	f7ff ffc7 	bl	80002a4 <fun_add>
 8000316:	4603      	mov	r3, r0
 8000318:	603b      	str	r3, [r7, #0]

	printf("result = %d\n",ret);
 800031a:	683b      	ldr	r3, [r7, #0]
 800031c:	4619      	mov	r1, r3
 800031e:	4803      	ldr	r0, [pc, #12]	; (800032c <main+0x30>)
 8000320:	f000 f92e 	bl	8000580 <iprintf>

	generate_exception();
 8000324:	f7ff ffe2 	bl	80002ec <generate_exception>



	for(;;);
 8000328:	e7fe      	b.n	8000328 <main+0x2c>
 800032a:	bf00      	nop
 800032c:	08001434 	.word	0x08001434

08000330 <SVC_Handler>:
}


void SVC_Handler(void)
{
 8000330:	b580      	push	{r7, lr}
 8000332:	af00      	add	r7, sp, #0
	printf(" in SVC_Handler\n");
 8000334:	4802      	ldr	r0, [pc, #8]	; (8000340 <SVC_Handler+0x10>)
 8000336:	f000 f997 	bl	8000668 <puts>
}
 800033a:	bf00      	nop
 800033c:	bd80      	pop	{r7, pc}
 800033e:	bf00      	nop
 8000340:	08001444 	.word	0x08001444

08000344 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000344:	b480      	push	{r7}
 8000346:	b083      	sub	sp, #12
 8000348:	af00      	add	r7, sp, #0
 800034a:	4603      	mov	r3, r0
 800034c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800034e:	4b0f      	ldr	r3, [pc, #60]	; (800038c <ITM_SendChar+0x48>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	4a0e      	ldr	r2, [pc, #56]	; (800038c <ITM_SendChar+0x48>)
 8000354:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000358:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800035a:	4b0d      	ldr	r3, [pc, #52]	; (8000390 <ITM_SendChar+0x4c>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	4a0c      	ldr	r2, [pc, #48]	; (8000390 <ITM_SendChar+0x4c>)
 8000360:	f043 0301 	orr.w	r3, r3, #1
 8000364:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000366:	bf00      	nop
 8000368:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	f003 0301 	and.w	r3, r3, #1
 8000372:	2b00      	cmp	r3, #0
 8000374:	d0f8      	beq.n	8000368 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000376:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800037a:	79fb      	ldrb	r3, [r7, #7]
 800037c:	6013      	str	r3, [r2, #0]
}
 800037e:	bf00      	nop
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	e000edfc 	.word	0xe000edfc
 8000390:	e0000e00 	.word	0xe0000e00

08000394 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a0:	2300      	movs	r3, #0
 80003a2:	617b      	str	r3, [r7, #20]
 80003a4:	e00a      	b.n	80003bc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003a6:	f3af 8000 	nop.w
 80003aa:	4601      	mov	r1, r0
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	b2ca      	uxtb	r2, r1
 80003b4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	697a      	ldr	r2, [r7, #20]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	dbf0      	blt.n	80003a6 <_read+0x12>
	}

return len;
 80003c4:	687b      	ldr	r3, [r7, #4]
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	3718      	adds	r7, #24
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bd80      	pop	{r7, pc}

080003ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ce:	b580      	push	{r7, lr}
 80003d0:	b086      	sub	sp, #24
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	60f8      	str	r0, [r7, #12]
 80003d6:	60b9      	str	r1, [r7, #8]
 80003d8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003da:	2300      	movs	r3, #0
 80003dc:	617b      	str	r3, [r7, #20]
 80003de:	e009      	b.n	80003f4 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	60ba      	str	r2, [r7, #8]
 80003e6:	781b      	ldrb	r3, [r3, #0]
 80003e8:	4618      	mov	r0, r3
 80003ea:	f7ff ffab 	bl	8000344 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	dbf1      	blt.n	80003e0 <_write+0x12>
	}
	return len;
 80003fc:	687b      	ldr	r3, [r7, #4]
}
 80003fe:	4618      	mov	r0, r3
 8000400:	3718      	adds	r7, #24
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <_close>:

int _close(int file)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
	return -1;
 800040e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000412:	4618      	mov	r0, r3
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr

0800041e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800041e:	b480      	push	{r7}
 8000420:	b083      	sub	sp, #12
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
 8000426:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000428:	683b      	ldr	r3, [r7, #0]
 800042a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800042e:	605a      	str	r2, [r3, #4]
	return 0;
 8000430:	2300      	movs	r3, #0
}
 8000432:	4618      	mov	r0, r3
 8000434:	370c      	adds	r7, #12
 8000436:	46bd      	mov	sp, r7
 8000438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043c:	4770      	bx	lr

0800043e <_isatty>:

int _isatty(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
	return 1;
 8000446:	2301      	movs	r3, #1
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr

08000454 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000454:	b480      	push	{r7}
 8000456:	b085      	sub	sp, #20
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
	return 0;
 8000460:	2300      	movs	r3, #0
}
 8000462:	4618      	mov	r0, r3
 8000464:	3714      	adds	r7, #20
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr
	...

08000470 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b084      	sub	sp, #16
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000478:	4b11      	ldr	r3, [pc, #68]	; (80004c0 <_sbrk+0x50>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	2b00      	cmp	r3, #0
 800047e:	d102      	bne.n	8000486 <_sbrk+0x16>
		heap_end = &end;
 8000480:	4b0f      	ldr	r3, [pc, #60]	; (80004c0 <_sbrk+0x50>)
 8000482:	4a10      	ldr	r2, [pc, #64]	; (80004c4 <_sbrk+0x54>)
 8000484:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000486:	4b0e      	ldr	r3, [pc, #56]	; (80004c0 <_sbrk+0x50>)
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800048c:	4b0c      	ldr	r3, [pc, #48]	; (80004c0 <_sbrk+0x50>)
 800048e:	681a      	ldr	r2, [r3, #0]
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	4413      	add	r3, r2
 8000494:	466a      	mov	r2, sp
 8000496:	4293      	cmp	r3, r2
 8000498:	d907      	bls.n	80004aa <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800049a:	f000 f83f 	bl	800051c <__errno>
 800049e:	4602      	mov	r2, r0
 80004a0:	230c      	movs	r3, #12
 80004a2:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80004a4:	f04f 33ff 	mov.w	r3, #4294967295
 80004a8:	e006      	b.n	80004b8 <_sbrk+0x48>
	}

	heap_end += incr;
 80004aa:	4b05      	ldr	r3, [pc, #20]	; (80004c0 <_sbrk+0x50>)
 80004ac:	681a      	ldr	r2, [r3, #0]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	4413      	add	r3, r2
 80004b2:	4a03      	ldr	r2, [pc, #12]	; (80004c0 <_sbrk+0x50>)
 80004b4:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80004b6:	68fb      	ldr	r3, [r7, #12]
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	3710      	adds	r7, #16
 80004bc:	46bd      	mov	sp, r7
 80004be:	bd80      	pop	{r7, pc}
 80004c0:	20000080 	.word	0x20000080
 80004c4:	20000090 	.word	0x20000090

080004c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c8:	480d      	ldr	r0, [pc, #52]	; (8000500 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004cc:	480d      	ldr	r0, [pc, #52]	; (8000504 <LoopForever+0x6>)
  ldr r1, =_edata
 80004ce:	490e      	ldr	r1, [pc, #56]	; (8000508 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d0:	4a0e      	ldr	r2, [pc, #56]	; (800050c <LoopForever+0xe>)
  movs r3, #0
 80004d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d4:	e002      	b.n	80004dc <LoopCopyDataInit>

080004d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004da:	3304      	adds	r3, #4

080004dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e0:	d3f9      	bcc.n	80004d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004e2:	4a0b      	ldr	r2, [pc, #44]	; (8000510 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e4:	4c0b      	ldr	r4, [pc, #44]	; (8000514 <LoopForever+0x16>)
  movs r3, #0
 80004e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004e8:	e001      	b.n	80004ee <LoopFillZerobss>

080004ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ec:	3204      	adds	r2, #4

080004ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f0:	d3fb      	bcc.n	80004ea <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004f2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80004f6:	f000 f817 	bl	8000528 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fa:	f7ff feff 	bl	80002fc <main>

080004fe <LoopForever>:

LoopForever:
    b LoopForever
 80004fe:	e7fe      	b.n	80004fe <LoopForever>
  ldr   r0, =_estack
 8000500:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000504:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000508:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800050c:	080014f4 	.word	0x080014f4
  ldr r2, =_sbss
 8000510:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000514:	20000090 	.word	0x20000090

08000518 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000518:	e7fe      	b.n	8000518 <ADC_IRQHandler>
	...

0800051c <__errno>:
 800051c:	4b01      	ldr	r3, [pc, #4]	; (8000524 <__errno+0x8>)
 800051e:	6818      	ldr	r0, [r3, #0]
 8000520:	4770      	bx	lr
 8000522:	bf00      	nop
 8000524:	20000000 	.word	0x20000000

08000528 <__libc_init_array>:
 8000528:	b570      	push	{r4, r5, r6, lr}
 800052a:	4e0d      	ldr	r6, [pc, #52]	; (8000560 <__libc_init_array+0x38>)
 800052c:	4c0d      	ldr	r4, [pc, #52]	; (8000564 <__libc_init_array+0x3c>)
 800052e:	1ba4      	subs	r4, r4, r6
 8000530:	10a4      	asrs	r4, r4, #2
 8000532:	2500      	movs	r5, #0
 8000534:	42a5      	cmp	r5, r4
 8000536:	d109      	bne.n	800054c <__libc_init_array+0x24>
 8000538:	4e0b      	ldr	r6, [pc, #44]	; (8000568 <__libc_init_array+0x40>)
 800053a:	4c0c      	ldr	r4, [pc, #48]	; (800056c <__libc_init_array+0x44>)
 800053c:	f000 ff68 	bl	8001410 <_init>
 8000540:	1ba4      	subs	r4, r4, r6
 8000542:	10a4      	asrs	r4, r4, #2
 8000544:	2500      	movs	r5, #0
 8000546:	42a5      	cmp	r5, r4
 8000548:	d105      	bne.n	8000556 <__libc_init_array+0x2e>
 800054a:	bd70      	pop	{r4, r5, r6, pc}
 800054c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000550:	4798      	blx	r3
 8000552:	3501      	adds	r5, #1
 8000554:	e7ee      	b.n	8000534 <__libc_init_array+0xc>
 8000556:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800055a:	4798      	blx	r3
 800055c:	3501      	adds	r5, #1
 800055e:	e7f2      	b.n	8000546 <__libc_init_array+0x1e>
 8000560:	080014ec 	.word	0x080014ec
 8000564:	080014ec 	.word	0x080014ec
 8000568:	080014ec 	.word	0x080014ec
 800056c:	080014f0 	.word	0x080014f0

08000570 <memset>:
 8000570:	4402      	add	r2, r0
 8000572:	4603      	mov	r3, r0
 8000574:	4293      	cmp	r3, r2
 8000576:	d100      	bne.n	800057a <memset+0xa>
 8000578:	4770      	bx	lr
 800057a:	f803 1b01 	strb.w	r1, [r3], #1
 800057e:	e7f9      	b.n	8000574 <memset+0x4>

08000580 <iprintf>:
 8000580:	b40f      	push	{r0, r1, r2, r3}
 8000582:	4b0a      	ldr	r3, [pc, #40]	; (80005ac <iprintf+0x2c>)
 8000584:	b513      	push	{r0, r1, r4, lr}
 8000586:	681c      	ldr	r4, [r3, #0]
 8000588:	b124      	cbz	r4, 8000594 <iprintf+0x14>
 800058a:	69a3      	ldr	r3, [r4, #24]
 800058c:	b913      	cbnz	r3, 8000594 <iprintf+0x14>
 800058e:	4620      	mov	r0, r4
 8000590:	f000 fa22 	bl	80009d8 <__sinit>
 8000594:	ab05      	add	r3, sp, #20
 8000596:	9a04      	ldr	r2, [sp, #16]
 8000598:	68a1      	ldr	r1, [r4, #8]
 800059a:	9301      	str	r3, [sp, #4]
 800059c:	4620      	mov	r0, r4
 800059e:	f000 fbdb 	bl	8000d58 <_vfiprintf_r>
 80005a2:	b002      	add	sp, #8
 80005a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a8:	b004      	add	sp, #16
 80005aa:	4770      	bx	lr
 80005ac:	20000000 	.word	0x20000000

080005b0 <_puts_r>:
 80005b0:	b570      	push	{r4, r5, r6, lr}
 80005b2:	460e      	mov	r6, r1
 80005b4:	4605      	mov	r5, r0
 80005b6:	b118      	cbz	r0, 80005c0 <_puts_r+0x10>
 80005b8:	6983      	ldr	r3, [r0, #24]
 80005ba:	b90b      	cbnz	r3, 80005c0 <_puts_r+0x10>
 80005bc:	f000 fa0c 	bl	80009d8 <__sinit>
 80005c0:	69ab      	ldr	r3, [r5, #24]
 80005c2:	68ac      	ldr	r4, [r5, #8]
 80005c4:	b913      	cbnz	r3, 80005cc <_puts_r+0x1c>
 80005c6:	4628      	mov	r0, r5
 80005c8:	f000 fa06 	bl	80009d8 <__sinit>
 80005cc:	4b23      	ldr	r3, [pc, #140]	; (800065c <_puts_r+0xac>)
 80005ce:	429c      	cmp	r4, r3
 80005d0:	d117      	bne.n	8000602 <_puts_r+0x52>
 80005d2:	686c      	ldr	r4, [r5, #4]
 80005d4:	89a3      	ldrh	r3, [r4, #12]
 80005d6:	071b      	lsls	r3, r3, #28
 80005d8:	d51d      	bpl.n	8000616 <_puts_r+0x66>
 80005da:	6923      	ldr	r3, [r4, #16]
 80005dc:	b1db      	cbz	r3, 8000616 <_puts_r+0x66>
 80005de:	3e01      	subs	r6, #1
 80005e0:	68a3      	ldr	r3, [r4, #8]
 80005e2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80005e6:	3b01      	subs	r3, #1
 80005e8:	60a3      	str	r3, [r4, #8]
 80005ea:	b9e9      	cbnz	r1, 8000628 <_puts_r+0x78>
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	da2e      	bge.n	800064e <_puts_r+0x9e>
 80005f0:	4622      	mov	r2, r4
 80005f2:	210a      	movs	r1, #10
 80005f4:	4628      	mov	r0, r5
 80005f6:	f000 f83f 	bl	8000678 <__swbuf_r>
 80005fa:	3001      	adds	r0, #1
 80005fc:	d011      	beq.n	8000622 <_puts_r+0x72>
 80005fe:	200a      	movs	r0, #10
 8000600:	e011      	b.n	8000626 <_puts_r+0x76>
 8000602:	4b17      	ldr	r3, [pc, #92]	; (8000660 <_puts_r+0xb0>)
 8000604:	429c      	cmp	r4, r3
 8000606:	d101      	bne.n	800060c <_puts_r+0x5c>
 8000608:	68ac      	ldr	r4, [r5, #8]
 800060a:	e7e3      	b.n	80005d4 <_puts_r+0x24>
 800060c:	4b15      	ldr	r3, [pc, #84]	; (8000664 <_puts_r+0xb4>)
 800060e:	429c      	cmp	r4, r3
 8000610:	bf08      	it	eq
 8000612:	68ec      	ldreq	r4, [r5, #12]
 8000614:	e7de      	b.n	80005d4 <_puts_r+0x24>
 8000616:	4621      	mov	r1, r4
 8000618:	4628      	mov	r0, r5
 800061a:	f000 f87f 	bl	800071c <__swsetup_r>
 800061e:	2800      	cmp	r0, #0
 8000620:	d0dd      	beq.n	80005de <_puts_r+0x2e>
 8000622:	f04f 30ff 	mov.w	r0, #4294967295
 8000626:	bd70      	pop	{r4, r5, r6, pc}
 8000628:	2b00      	cmp	r3, #0
 800062a:	da04      	bge.n	8000636 <_puts_r+0x86>
 800062c:	69a2      	ldr	r2, [r4, #24]
 800062e:	429a      	cmp	r2, r3
 8000630:	dc06      	bgt.n	8000640 <_puts_r+0x90>
 8000632:	290a      	cmp	r1, #10
 8000634:	d004      	beq.n	8000640 <_puts_r+0x90>
 8000636:	6823      	ldr	r3, [r4, #0]
 8000638:	1c5a      	adds	r2, r3, #1
 800063a:	6022      	str	r2, [r4, #0]
 800063c:	7019      	strb	r1, [r3, #0]
 800063e:	e7cf      	b.n	80005e0 <_puts_r+0x30>
 8000640:	4622      	mov	r2, r4
 8000642:	4628      	mov	r0, r5
 8000644:	f000 f818 	bl	8000678 <__swbuf_r>
 8000648:	3001      	adds	r0, #1
 800064a:	d1c9      	bne.n	80005e0 <_puts_r+0x30>
 800064c:	e7e9      	b.n	8000622 <_puts_r+0x72>
 800064e:	6823      	ldr	r3, [r4, #0]
 8000650:	200a      	movs	r0, #10
 8000652:	1c5a      	adds	r2, r3, #1
 8000654:	6022      	str	r2, [r4, #0]
 8000656:	7018      	strb	r0, [r3, #0]
 8000658:	e7e5      	b.n	8000626 <_puts_r+0x76>
 800065a:	bf00      	nop
 800065c:	08001478 	.word	0x08001478
 8000660:	08001498 	.word	0x08001498
 8000664:	08001458 	.word	0x08001458

08000668 <puts>:
 8000668:	4b02      	ldr	r3, [pc, #8]	; (8000674 <puts+0xc>)
 800066a:	4601      	mov	r1, r0
 800066c:	6818      	ldr	r0, [r3, #0]
 800066e:	f7ff bf9f 	b.w	80005b0 <_puts_r>
 8000672:	bf00      	nop
 8000674:	20000000 	.word	0x20000000

08000678 <__swbuf_r>:
 8000678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067a:	460e      	mov	r6, r1
 800067c:	4614      	mov	r4, r2
 800067e:	4605      	mov	r5, r0
 8000680:	b118      	cbz	r0, 800068a <__swbuf_r+0x12>
 8000682:	6983      	ldr	r3, [r0, #24]
 8000684:	b90b      	cbnz	r3, 800068a <__swbuf_r+0x12>
 8000686:	f000 f9a7 	bl	80009d8 <__sinit>
 800068a:	4b21      	ldr	r3, [pc, #132]	; (8000710 <__swbuf_r+0x98>)
 800068c:	429c      	cmp	r4, r3
 800068e:	d12a      	bne.n	80006e6 <__swbuf_r+0x6e>
 8000690:	686c      	ldr	r4, [r5, #4]
 8000692:	69a3      	ldr	r3, [r4, #24]
 8000694:	60a3      	str	r3, [r4, #8]
 8000696:	89a3      	ldrh	r3, [r4, #12]
 8000698:	071a      	lsls	r2, r3, #28
 800069a:	d52e      	bpl.n	80006fa <__swbuf_r+0x82>
 800069c:	6923      	ldr	r3, [r4, #16]
 800069e:	b363      	cbz	r3, 80006fa <__swbuf_r+0x82>
 80006a0:	6923      	ldr	r3, [r4, #16]
 80006a2:	6820      	ldr	r0, [r4, #0]
 80006a4:	1ac0      	subs	r0, r0, r3
 80006a6:	6963      	ldr	r3, [r4, #20]
 80006a8:	b2f6      	uxtb	r6, r6
 80006aa:	4283      	cmp	r3, r0
 80006ac:	4637      	mov	r7, r6
 80006ae:	dc04      	bgt.n	80006ba <__swbuf_r+0x42>
 80006b0:	4621      	mov	r1, r4
 80006b2:	4628      	mov	r0, r5
 80006b4:	f000 f926 	bl	8000904 <_fflush_r>
 80006b8:	bb28      	cbnz	r0, 8000706 <__swbuf_r+0x8e>
 80006ba:	68a3      	ldr	r3, [r4, #8]
 80006bc:	3b01      	subs	r3, #1
 80006be:	60a3      	str	r3, [r4, #8]
 80006c0:	6823      	ldr	r3, [r4, #0]
 80006c2:	1c5a      	adds	r2, r3, #1
 80006c4:	6022      	str	r2, [r4, #0]
 80006c6:	701e      	strb	r6, [r3, #0]
 80006c8:	6963      	ldr	r3, [r4, #20]
 80006ca:	3001      	adds	r0, #1
 80006cc:	4283      	cmp	r3, r0
 80006ce:	d004      	beq.n	80006da <__swbuf_r+0x62>
 80006d0:	89a3      	ldrh	r3, [r4, #12]
 80006d2:	07db      	lsls	r3, r3, #31
 80006d4:	d519      	bpl.n	800070a <__swbuf_r+0x92>
 80006d6:	2e0a      	cmp	r6, #10
 80006d8:	d117      	bne.n	800070a <__swbuf_r+0x92>
 80006da:	4621      	mov	r1, r4
 80006dc:	4628      	mov	r0, r5
 80006de:	f000 f911 	bl	8000904 <_fflush_r>
 80006e2:	b190      	cbz	r0, 800070a <__swbuf_r+0x92>
 80006e4:	e00f      	b.n	8000706 <__swbuf_r+0x8e>
 80006e6:	4b0b      	ldr	r3, [pc, #44]	; (8000714 <__swbuf_r+0x9c>)
 80006e8:	429c      	cmp	r4, r3
 80006ea:	d101      	bne.n	80006f0 <__swbuf_r+0x78>
 80006ec:	68ac      	ldr	r4, [r5, #8]
 80006ee:	e7d0      	b.n	8000692 <__swbuf_r+0x1a>
 80006f0:	4b09      	ldr	r3, [pc, #36]	; (8000718 <__swbuf_r+0xa0>)
 80006f2:	429c      	cmp	r4, r3
 80006f4:	bf08      	it	eq
 80006f6:	68ec      	ldreq	r4, [r5, #12]
 80006f8:	e7cb      	b.n	8000692 <__swbuf_r+0x1a>
 80006fa:	4621      	mov	r1, r4
 80006fc:	4628      	mov	r0, r5
 80006fe:	f000 f80d 	bl	800071c <__swsetup_r>
 8000702:	2800      	cmp	r0, #0
 8000704:	d0cc      	beq.n	80006a0 <__swbuf_r+0x28>
 8000706:	f04f 37ff 	mov.w	r7, #4294967295
 800070a:	4638      	mov	r0, r7
 800070c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800070e:	bf00      	nop
 8000710:	08001478 	.word	0x08001478
 8000714:	08001498 	.word	0x08001498
 8000718:	08001458 	.word	0x08001458

0800071c <__swsetup_r>:
 800071c:	4b32      	ldr	r3, [pc, #200]	; (80007e8 <__swsetup_r+0xcc>)
 800071e:	b570      	push	{r4, r5, r6, lr}
 8000720:	681d      	ldr	r5, [r3, #0]
 8000722:	4606      	mov	r6, r0
 8000724:	460c      	mov	r4, r1
 8000726:	b125      	cbz	r5, 8000732 <__swsetup_r+0x16>
 8000728:	69ab      	ldr	r3, [r5, #24]
 800072a:	b913      	cbnz	r3, 8000732 <__swsetup_r+0x16>
 800072c:	4628      	mov	r0, r5
 800072e:	f000 f953 	bl	80009d8 <__sinit>
 8000732:	4b2e      	ldr	r3, [pc, #184]	; (80007ec <__swsetup_r+0xd0>)
 8000734:	429c      	cmp	r4, r3
 8000736:	d10f      	bne.n	8000758 <__swsetup_r+0x3c>
 8000738:	686c      	ldr	r4, [r5, #4]
 800073a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800073e:	b29a      	uxth	r2, r3
 8000740:	0715      	lsls	r5, r2, #28
 8000742:	d42c      	bmi.n	800079e <__swsetup_r+0x82>
 8000744:	06d0      	lsls	r0, r2, #27
 8000746:	d411      	bmi.n	800076c <__swsetup_r+0x50>
 8000748:	2209      	movs	r2, #9
 800074a:	6032      	str	r2, [r6, #0]
 800074c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000750:	81a3      	strh	r3, [r4, #12]
 8000752:	f04f 30ff 	mov.w	r0, #4294967295
 8000756:	e03e      	b.n	80007d6 <__swsetup_r+0xba>
 8000758:	4b25      	ldr	r3, [pc, #148]	; (80007f0 <__swsetup_r+0xd4>)
 800075a:	429c      	cmp	r4, r3
 800075c:	d101      	bne.n	8000762 <__swsetup_r+0x46>
 800075e:	68ac      	ldr	r4, [r5, #8]
 8000760:	e7eb      	b.n	800073a <__swsetup_r+0x1e>
 8000762:	4b24      	ldr	r3, [pc, #144]	; (80007f4 <__swsetup_r+0xd8>)
 8000764:	429c      	cmp	r4, r3
 8000766:	bf08      	it	eq
 8000768:	68ec      	ldreq	r4, [r5, #12]
 800076a:	e7e6      	b.n	800073a <__swsetup_r+0x1e>
 800076c:	0751      	lsls	r1, r2, #29
 800076e:	d512      	bpl.n	8000796 <__swsetup_r+0x7a>
 8000770:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000772:	b141      	cbz	r1, 8000786 <__swsetup_r+0x6a>
 8000774:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000778:	4299      	cmp	r1, r3
 800077a:	d002      	beq.n	8000782 <__swsetup_r+0x66>
 800077c:	4630      	mov	r0, r6
 800077e:	f000 fa19 	bl	8000bb4 <_free_r>
 8000782:	2300      	movs	r3, #0
 8000784:	6363      	str	r3, [r4, #52]	; 0x34
 8000786:	89a3      	ldrh	r3, [r4, #12]
 8000788:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800078c:	81a3      	strh	r3, [r4, #12]
 800078e:	2300      	movs	r3, #0
 8000790:	6063      	str	r3, [r4, #4]
 8000792:	6923      	ldr	r3, [r4, #16]
 8000794:	6023      	str	r3, [r4, #0]
 8000796:	89a3      	ldrh	r3, [r4, #12]
 8000798:	f043 0308 	orr.w	r3, r3, #8
 800079c:	81a3      	strh	r3, [r4, #12]
 800079e:	6923      	ldr	r3, [r4, #16]
 80007a0:	b94b      	cbnz	r3, 80007b6 <__swsetup_r+0x9a>
 80007a2:	89a3      	ldrh	r3, [r4, #12]
 80007a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80007a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80007ac:	d003      	beq.n	80007b6 <__swsetup_r+0x9a>
 80007ae:	4621      	mov	r1, r4
 80007b0:	4630      	mov	r0, r6
 80007b2:	f000 f9bf 	bl	8000b34 <__smakebuf_r>
 80007b6:	89a2      	ldrh	r2, [r4, #12]
 80007b8:	f012 0301 	ands.w	r3, r2, #1
 80007bc:	d00c      	beq.n	80007d8 <__swsetup_r+0xbc>
 80007be:	2300      	movs	r3, #0
 80007c0:	60a3      	str	r3, [r4, #8]
 80007c2:	6963      	ldr	r3, [r4, #20]
 80007c4:	425b      	negs	r3, r3
 80007c6:	61a3      	str	r3, [r4, #24]
 80007c8:	6923      	ldr	r3, [r4, #16]
 80007ca:	b953      	cbnz	r3, 80007e2 <__swsetup_r+0xc6>
 80007cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007d0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80007d4:	d1ba      	bne.n	800074c <__swsetup_r+0x30>
 80007d6:	bd70      	pop	{r4, r5, r6, pc}
 80007d8:	0792      	lsls	r2, r2, #30
 80007da:	bf58      	it	pl
 80007dc:	6963      	ldrpl	r3, [r4, #20]
 80007de:	60a3      	str	r3, [r4, #8]
 80007e0:	e7f2      	b.n	80007c8 <__swsetup_r+0xac>
 80007e2:	2000      	movs	r0, #0
 80007e4:	e7f7      	b.n	80007d6 <__swsetup_r+0xba>
 80007e6:	bf00      	nop
 80007e8:	20000000 	.word	0x20000000
 80007ec:	08001478 	.word	0x08001478
 80007f0:	08001498 	.word	0x08001498
 80007f4:	08001458 	.word	0x08001458

080007f8 <__sflush_r>:
 80007f8:	898a      	ldrh	r2, [r1, #12]
 80007fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007fe:	4605      	mov	r5, r0
 8000800:	0710      	lsls	r0, r2, #28
 8000802:	460c      	mov	r4, r1
 8000804:	d458      	bmi.n	80008b8 <__sflush_r+0xc0>
 8000806:	684b      	ldr	r3, [r1, #4]
 8000808:	2b00      	cmp	r3, #0
 800080a:	dc05      	bgt.n	8000818 <__sflush_r+0x20>
 800080c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800080e:	2b00      	cmp	r3, #0
 8000810:	dc02      	bgt.n	8000818 <__sflush_r+0x20>
 8000812:	2000      	movs	r0, #0
 8000814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000818:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800081a:	2e00      	cmp	r6, #0
 800081c:	d0f9      	beq.n	8000812 <__sflush_r+0x1a>
 800081e:	2300      	movs	r3, #0
 8000820:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000824:	682f      	ldr	r7, [r5, #0]
 8000826:	6a21      	ldr	r1, [r4, #32]
 8000828:	602b      	str	r3, [r5, #0]
 800082a:	d032      	beq.n	8000892 <__sflush_r+0x9a>
 800082c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800082e:	89a3      	ldrh	r3, [r4, #12]
 8000830:	075a      	lsls	r2, r3, #29
 8000832:	d505      	bpl.n	8000840 <__sflush_r+0x48>
 8000834:	6863      	ldr	r3, [r4, #4]
 8000836:	1ac0      	subs	r0, r0, r3
 8000838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800083a:	b10b      	cbz	r3, 8000840 <__sflush_r+0x48>
 800083c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800083e:	1ac0      	subs	r0, r0, r3
 8000840:	2300      	movs	r3, #0
 8000842:	4602      	mov	r2, r0
 8000844:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000846:	6a21      	ldr	r1, [r4, #32]
 8000848:	4628      	mov	r0, r5
 800084a:	47b0      	blx	r6
 800084c:	1c43      	adds	r3, r0, #1
 800084e:	89a3      	ldrh	r3, [r4, #12]
 8000850:	d106      	bne.n	8000860 <__sflush_r+0x68>
 8000852:	6829      	ldr	r1, [r5, #0]
 8000854:	291d      	cmp	r1, #29
 8000856:	d848      	bhi.n	80008ea <__sflush_r+0xf2>
 8000858:	4a29      	ldr	r2, [pc, #164]	; (8000900 <__sflush_r+0x108>)
 800085a:	40ca      	lsrs	r2, r1
 800085c:	07d6      	lsls	r6, r2, #31
 800085e:	d544      	bpl.n	80008ea <__sflush_r+0xf2>
 8000860:	2200      	movs	r2, #0
 8000862:	6062      	str	r2, [r4, #4]
 8000864:	04d9      	lsls	r1, r3, #19
 8000866:	6922      	ldr	r2, [r4, #16]
 8000868:	6022      	str	r2, [r4, #0]
 800086a:	d504      	bpl.n	8000876 <__sflush_r+0x7e>
 800086c:	1c42      	adds	r2, r0, #1
 800086e:	d101      	bne.n	8000874 <__sflush_r+0x7c>
 8000870:	682b      	ldr	r3, [r5, #0]
 8000872:	b903      	cbnz	r3, 8000876 <__sflush_r+0x7e>
 8000874:	6560      	str	r0, [r4, #84]	; 0x54
 8000876:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000878:	602f      	str	r7, [r5, #0]
 800087a:	2900      	cmp	r1, #0
 800087c:	d0c9      	beq.n	8000812 <__sflush_r+0x1a>
 800087e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000882:	4299      	cmp	r1, r3
 8000884:	d002      	beq.n	800088c <__sflush_r+0x94>
 8000886:	4628      	mov	r0, r5
 8000888:	f000 f994 	bl	8000bb4 <_free_r>
 800088c:	2000      	movs	r0, #0
 800088e:	6360      	str	r0, [r4, #52]	; 0x34
 8000890:	e7c0      	b.n	8000814 <__sflush_r+0x1c>
 8000892:	2301      	movs	r3, #1
 8000894:	4628      	mov	r0, r5
 8000896:	47b0      	blx	r6
 8000898:	1c41      	adds	r1, r0, #1
 800089a:	d1c8      	bne.n	800082e <__sflush_r+0x36>
 800089c:	682b      	ldr	r3, [r5, #0]
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d0c5      	beq.n	800082e <__sflush_r+0x36>
 80008a2:	2b1d      	cmp	r3, #29
 80008a4:	d001      	beq.n	80008aa <__sflush_r+0xb2>
 80008a6:	2b16      	cmp	r3, #22
 80008a8:	d101      	bne.n	80008ae <__sflush_r+0xb6>
 80008aa:	602f      	str	r7, [r5, #0]
 80008ac:	e7b1      	b.n	8000812 <__sflush_r+0x1a>
 80008ae:	89a3      	ldrh	r3, [r4, #12]
 80008b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008b4:	81a3      	strh	r3, [r4, #12]
 80008b6:	e7ad      	b.n	8000814 <__sflush_r+0x1c>
 80008b8:	690f      	ldr	r7, [r1, #16]
 80008ba:	2f00      	cmp	r7, #0
 80008bc:	d0a9      	beq.n	8000812 <__sflush_r+0x1a>
 80008be:	0793      	lsls	r3, r2, #30
 80008c0:	680e      	ldr	r6, [r1, #0]
 80008c2:	bf08      	it	eq
 80008c4:	694b      	ldreq	r3, [r1, #20]
 80008c6:	600f      	str	r7, [r1, #0]
 80008c8:	bf18      	it	ne
 80008ca:	2300      	movne	r3, #0
 80008cc:	eba6 0807 	sub.w	r8, r6, r7
 80008d0:	608b      	str	r3, [r1, #8]
 80008d2:	f1b8 0f00 	cmp.w	r8, #0
 80008d6:	dd9c      	ble.n	8000812 <__sflush_r+0x1a>
 80008d8:	4643      	mov	r3, r8
 80008da:	463a      	mov	r2, r7
 80008dc:	6a21      	ldr	r1, [r4, #32]
 80008de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80008e0:	4628      	mov	r0, r5
 80008e2:	47b0      	blx	r6
 80008e4:	2800      	cmp	r0, #0
 80008e6:	dc06      	bgt.n	80008f6 <__sflush_r+0xfe>
 80008e8:	89a3      	ldrh	r3, [r4, #12]
 80008ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008ee:	81a3      	strh	r3, [r4, #12]
 80008f0:	f04f 30ff 	mov.w	r0, #4294967295
 80008f4:	e78e      	b.n	8000814 <__sflush_r+0x1c>
 80008f6:	4407      	add	r7, r0
 80008f8:	eba8 0800 	sub.w	r8, r8, r0
 80008fc:	e7e9      	b.n	80008d2 <__sflush_r+0xda>
 80008fe:	bf00      	nop
 8000900:	20400001 	.word	0x20400001

08000904 <_fflush_r>:
 8000904:	b538      	push	{r3, r4, r5, lr}
 8000906:	690b      	ldr	r3, [r1, #16]
 8000908:	4605      	mov	r5, r0
 800090a:	460c      	mov	r4, r1
 800090c:	b1db      	cbz	r3, 8000946 <_fflush_r+0x42>
 800090e:	b118      	cbz	r0, 8000918 <_fflush_r+0x14>
 8000910:	6983      	ldr	r3, [r0, #24]
 8000912:	b90b      	cbnz	r3, 8000918 <_fflush_r+0x14>
 8000914:	f000 f860 	bl	80009d8 <__sinit>
 8000918:	4b0c      	ldr	r3, [pc, #48]	; (800094c <_fflush_r+0x48>)
 800091a:	429c      	cmp	r4, r3
 800091c:	d109      	bne.n	8000932 <_fflush_r+0x2e>
 800091e:	686c      	ldr	r4, [r5, #4]
 8000920:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000924:	b17b      	cbz	r3, 8000946 <_fflush_r+0x42>
 8000926:	4621      	mov	r1, r4
 8000928:	4628      	mov	r0, r5
 800092a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800092e:	f7ff bf63 	b.w	80007f8 <__sflush_r>
 8000932:	4b07      	ldr	r3, [pc, #28]	; (8000950 <_fflush_r+0x4c>)
 8000934:	429c      	cmp	r4, r3
 8000936:	d101      	bne.n	800093c <_fflush_r+0x38>
 8000938:	68ac      	ldr	r4, [r5, #8]
 800093a:	e7f1      	b.n	8000920 <_fflush_r+0x1c>
 800093c:	4b05      	ldr	r3, [pc, #20]	; (8000954 <_fflush_r+0x50>)
 800093e:	429c      	cmp	r4, r3
 8000940:	bf08      	it	eq
 8000942:	68ec      	ldreq	r4, [r5, #12]
 8000944:	e7ec      	b.n	8000920 <_fflush_r+0x1c>
 8000946:	2000      	movs	r0, #0
 8000948:	bd38      	pop	{r3, r4, r5, pc}
 800094a:	bf00      	nop
 800094c:	08001478 	.word	0x08001478
 8000950:	08001498 	.word	0x08001498
 8000954:	08001458 	.word	0x08001458

08000958 <std>:
 8000958:	2300      	movs	r3, #0
 800095a:	b510      	push	{r4, lr}
 800095c:	4604      	mov	r4, r0
 800095e:	e9c0 3300 	strd	r3, r3, [r0]
 8000962:	6083      	str	r3, [r0, #8]
 8000964:	8181      	strh	r1, [r0, #12]
 8000966:	6643      	str	r3, [r0, #100]	; 0x64
 8000968:	81c2      	strh	r2, [r0, #14]
 800096a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800096e:	6183      	str	r3, [r0, #24]
 8000970:	4619      	mov	r1, r3
 8000972:	2208      	movs	r2, #8
 8000974:	305c      	adds	r0, #92	; 0x5c
 8000976:	f7ff fdfb 	bl	8000570 <memset>
 800097a:	4b05      	ldr	r3, [pc, #20]	; (8000990 <std+0x38>)
 800097c:	6263      	str	r3, [r4, #36]	; 0x24
 800097e:	4b05      	ldr	r3, [pc, #20]	; (8000994 <std+0x3c>)
 8000980:	62a3      	str	r3, [r4, #40]	; 0x28
 8000982:	4b05      	ldr	r3, [pc, #20]	; (8000998 <std+0x40>)
 8000984:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000986:	4b05      	ldr	r3, [pc, #20]	; (800099c <std+0x44>)
 8000988:	6224      	str	r4, [r4, #32]
 800098a:	6323      	str	r3, [r4, #48]	; 0x30
 800098c:	bd10      	pop	{r4, pc}
 800098e:	bf00      	nop
 8000990:	080012b5 	.word	0x080012b5
 8000994:	080012d7 	.word	0x080012d7
 8000998:	0800130f 	.word	0x0800130f
 800099c:	08001333 	.word	0x08001333

080009a0 <_cleanup_r>:
 80009a0:	4901      	ldr	r1, [pc, #4]	; (80009a8 <_cleanup_r+0x8>)
 80009a2:	f000 b885 	b.w	8000ab0 <_fwalk_reent>
 80009a6:	bf00      	nop
 80009a8:	08000905 	.word	0x08000905

080009ac <__sfmoreglue>:
 80009ac:	b570      	push	{r4, r5, r6, lr}
 80009ae:	1e4a      	subs	r2, r1, #1
 80009b0:	2568      	movs	r5, #104	; 0x68
 80009b2:	4355      	muls	r5, r2
 80009b4:	460e      	mov	r6, r1
 80009b6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80009ba:	f000 f949 	bl	8000c50 <_malloc_r>
 80009be:	4604      	mov	r4, r0
 80009c0:	b140      	cbz	r0, 80009d4 <__sfmoreglue+0x28>
 80009c2:	2100      	movs	r1, #0
 80009c4:	e9c0 1600 	strd	r1, r6, [r0]
 80009c8:	300c      	adds	r0, #12
 80009ca:	60a0      	str	r0, [r4, #8]
 80009cc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80009d0:	f7ff fdce 	bl	8000570 <memset>
 80009d4:	4620      	mov	r0, r4
 80009d6:	bd70      	pop	{r4, r5, r6, pc}

080009d8 <__sinit>:
 80009d8:	6983      	ldr	r3, [r0, #24]
 80009da:	b510      	push	{r4, lr}
 80009dc:	4604      	mov	r4, r0
 80009de:	bb33      	cbnz	r3, 8000a2e <__sinit+0x56>
 80009e0:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80009e4:	6503      	str	r3, [r0, #80]	; 0x50
 80009e6:	4b12      	ldr	r3, [pc, #72]	; (8000a30 <__sinit+0x58>)
 80009e8:	4a12      	ldr	r2, [pc, #72]	; (8000a34 <__sinit+0x5c>)
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	6282      	str	r2, [r0, #40]	; 0x28
 80009ee:	4298      	cmp	r0, r3
 80009f0:	bf04      	itt	eq
 80009f2:	2301      	moveq	r3, #1
 80009f4:	6183      	streq	r3, [r0, #24]
 80009f6:	f000 f81f 	bl	8000a38 <__sfp>
 80009fa:	6060      	str	r0, [r4, #4]
 80009fc:	4620      	mov	r0, r4
 80009fe:	f000 f81b 	bl	8000a38 <__sfp>
 8000a02:	60a0      	str	r0, [r4, #8]
 8000a04:	4620      	mov	r0, r4
 8000a06:	f000 f817 	bl	8000a38 <__sfp>
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	60e0      	str	r0, [r4, #12]
 8000a0e:	2104      	movs	r1, #4
 8000a10:	6860      	ldr	r0, [r4, #4]
 8000a12:	f7ff ffa1 	bl	8000958 <std>
 8000a16:	2201      	movs	r2, #1
 8000a18:	2109      	movs	r1, #9
 8000a1a:	68a0      	ldr	r0, [r4, #8]
 8000a1c:	f7ff ff9c 	bl	8000958 <std>
 8000a20:	2202      	movs	r2, #2
 8000a22:	2112      	movs	r1, #18
 8000a24:	68e0      	ldr	r0, [r4, #12]
 8000a26:	f7ff ff97 	bl	8000958 <std>
 8000a2a:	2301      	movs	r3, #1
 8000a2c:	61a3      	str	r3, [r4, #24]
 8000a2e:	bd10      	pop	{r4, pc}
 8000a30:	08001454 	.word	0x08001454
 8000a34:	080009a1 	.word	0x080009a1

08000a38 <__sfp>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	4b1b      	ldr	r3, [pc, #108]	; (8000aa8 <__sfp+0x70>)
 8000a3c:	681e      	ldr	r6, [r3, #0]
 8000a3e:	69b3      	ldr	r3, [r6, #24]
 8000a40:	4607      	mov	r7, r0
 8000a42:	b913      	cbnz	r3, 8000a4a <__sfp+0x12>
 8000a44:	4630      	mov	r0, r6
 8000a46:	f7ff ffc7 	bl	80009d8 <__sinit>
 8000a4a:	3648      	adds	r6, #72	; 0x48
 8000a4c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a50:	3b01      	subs	r3, #1
 8000a52:	d503      	bpl.n	8000a5c <__sfp+0x24>
 8000a54:	6833      	ldr	r3, [r6, #0]
 8000a56:	b133      	cbz	r3, 8000a66 <__sfp+0x2e>
 8000a58:	6836      	ldr	r6, [r6, #0]
 8000a5a:	e7f7      	b.n	8000a4c <__sfp+0x14>
 8000a5c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a60:	b16d      	cbz	r5, 8000a7e <__sfp+0x46>
 8000a62:	3468      	adds	r4, #104	; 0x68
 8000a64:	e7f4      	b.n	8000a50 <__sfp+0x18>
 8000a66:	2104      	movs	r1, #4
 8000a68:	4638      	mov	r0, r7
 8000a6a:	f7ff ff9f 	bl	80009ac <__sfmoreglue>
 8000a6e:	6030      	str	r0, [r6, #0]
 8000a70:	2800      	cmp	r0, #0
 8000a72:	d1f1      	bne.n	8000a58 <__sfp+0x20>
 8000a74:	230c      	movs	r3, #12
 8000a76:	603b      	str	r3, [r7, #0]
 8000a78:	4604      	mov	r4, r0
 8000a7a:	4620      	mov	r0, r4
 8000a7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a7e:	4b0b      	ldr	r3, [pc, #44]	; (8000aac <__sfp+0x74>)
 8000a80:	6665      	str	r5, [r4, #100]	; 0x64
 8000a82:	e9c4 5500 	strd	r5, r5, [r4]
 8000a86:	60a5      	str	r5, [r4, #8]
 8000a88:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000a8c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000a90:	2208      	movs	r2, #8
 8000a92:	4629      	mov	r1, r5
 8000a94:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a98:	f7ff fd6a 	bl	8000570 <memset>
 8000a9c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000aa0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000aa4:	e7e9      	b.n	8000a7a <__sfp+0x42>
 8000aa6:	bf00      	nop
 8000aa8:	08001454 	.word	0x08001454
 8000aac:	ffff0001 	.word	0xffff0001

08000ab0 <_fwalk_reent>:
 8000ab0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ab4:	4680      	mov	r8, r0
 8000ab6:	4689      	mov	r9, r1
 8000ab8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000abc:	2600      	movs	r6, #0
 8000abe:	b914      	cbnz	r4, 8000ac6 <_fwalk_reent+0x16>
 8000ac0:	4630      	mov	r0, r6
 8000ac2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ac6:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000aca:	3f01      	subs	r7, #1
 8000acc:	d501      	bpl.n	8000ad2 <_fwalk_reent+0x22>
 8000ace:	6824      	ldr	r4, [r4, #0]
 8000ad0:	e7f5      	b.n	8000abe <_fwalk_reent+0xe>
 8000ad2:	89ab      	ldrh	r3, [r5, #12]
 8000ad4:	2b01      	cmp	r3, #1
 8000ad6:	d907      	bls.n	8000ae8 <_fwalk_reent+0x38>
 8000ad8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000adc:	3301      	adds	r3, #1
 8000ade:	d003      	beq.n	8000ae8 <_fwalk_reent+0x38>
 8000ae0:	4629      	mov	r1, r5
 8000ae2:	4640      	mov	r0, r8
 8000ae4:	47c8      	blx	r9
 8000ae6:	4306      	orrs	r6, r0
 8000ae8:	3568      	adds	r5, #104	; 0x68
 8000aea:	e7ee      	b.n	8000aca <_fwalk_reent+0x1a>

08000aec <__swhatbuf_r>:
 8000aec:	b570      	push	{r4, r5, r6, lr}
 8000aee:	460e      	mov	r6, r1
 8000af0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000af4:	2900      	cmp	r1, #0
 8000af6:	b096      	sub	sp, #88	; 0x58
 8000af8:	4614      	mov	r4, r2
 8000afa:	461d      	mov	r5, r3
 8000afc:	da07      	bge.n	8000b0e <__swhatbuf_r+0x22>
 8000afe:	2300      	movs	r3, #0
 8000b00:	602b      	str	r3, [r5, #0]
 8000b02:	89b3      	ldrh	r3, [r6, #12]
 8000b04:	061a      	lsls	r2, r3, #24
 8000b06:	d410      	bmi.n	8000b2a <__swhatbuf_r+0x3e>
 8000b08:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b0c:	e00e      	b.n	8000b2c <__swhatbuf_r+0x40>
 8000b0e:	466a      	mov	r2, sp
 8000b10:	f000 fc36 	bl	8001380 <_fstat_r>
 8000b14:	2800      	cmp	r0, #0
 8000b16:	dbf2      	blt.n	8000afe <__swhatbuf_r+0x12>
 8000b18:	9a01      	ldr	r2, [sp, #4]
 8000b1a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b1e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b22:	425a      	negs	r2, r3
 8000b24:	415a      	adcs	r2, r3
 8000b26:	602a      	str	r2, [r5, #0]
 8000b28:	e7ee      	b.n	8000b08 <__swhatbuf_r+0x1c>
 8000b2a:	2340      	movs	r3, #64	; 0x40
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	6023      	str	r3, [r4, #0]
 8000b30:	b016      	add	sp, #88	; 0x58
 8000b32:	bd70      	pop	{r4, r5, r6, pc}

08000b34 <__smakebuf_r>:
 8000b34:	898b      	ldrh	r3, [r1, #12]
 8000b36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b38:	079d      	lsls	r5, r3, #30
 8000b3a:	4606      	mov	r6, r0
 8000b3c:	460c      	mov	r4, r1
 8000b3e:	d507      	bpl.n	8000b50 <__smakebuf_r+0x1c>
 8000b40:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b44:	6023      	str	r3, [r4, #0]
 8000b46:	6123      	str	r3, [r4, #16]
 8000b48:	2301      	movs	r3, #1
 8000b4a:	6163      	str	r3, [r4, #20]
 8000b4c:	b002      	add	sp, #8
 8000b4e:	bd70      	pop	{r4, r5, r6, pc}
 8000b50:	ab01      	add	r3, sp, #4
 8000b52:	466a      	mov	r2, sp
 8000b54:	f7ff ffca 	bl	8000aec <__swhatbuf_r>
 8000b58:	9900      	ldr	r1, [sp, #0]
 8000b5a:	4605      	mov	r5, r0
 8000b5c:	4630      	mov	r0, r6
 8000b5e:	f000 f877 	bl	8000c50 <_malloc_r>
 8000b62:	b948      	cbnz	r0, 8000b78 <__smakebuf_r+0x44>
 8000b64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b68:	059a      	lsls	r2, r3, #22
 8000b6a:	d4ef      	bmi.n	8000b4c <__smakebuf_r+0x18>
 8000b6c:	f023 0303 	bic.w	r3, r3, #3
 8000b70:	f043 0302 	orr.w	r3, r3, #2
 8000b74:	81a3      	strh	r3, [r4, #12]
 8000b76:	e7e3      	b.n	8000b40 <__smakebuf_r+0xc>
 8000b78:	4b0d      	ldr	r3, [pc, #52]	; (8000bb0 <__smakebuf_r+0x7c>)
 8000b7a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b7c:	89a3      	ldrh	r3, [r4, #12]
 8000b7e:	6020      	str	r0, [r4, #0]
 8000b80:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b84:	81a3      	strh	r3, [r4, #12]
 8000b86:	9b00      	ldr	r3, [sp, #0]
 8000b88:	6163      	str	r3, [r4, #20]
 8000b8a:	9b01      	ldr	r3, [sp, #4]
 8000b8c:	6120      	str	r0, [r4, #16]
 8000b8e:	b15b      	cbz	r3, 8000ba8 <__smakebuf_r+0x74>
 8000b90:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b94:	4630      	mov	r0, r6
 8000b96:	f000 fc05 	bl	80013a4 <_isatty_r>
 8000b9a:	b128      	cbz	r0, 8000ba8 <__smakebuf_r+0x74>
 8000b9c:	89a3      	ldrh	r3, [r4, #12]
 8000b9e:	f023 0303 	bic.w	r3, r3, #3
 8000ba2:	f043 0301 	orr.w	r3, r3, #1
 8000ba6:	81a3      	strh	r3, [r4, #12]
 8000ba8:	89a3      	ldrh	r3, [r4, #12]
 8000baa:	431d      	orrs	r5, r3
 8000bac:	81a5      	strh	r5, [r4, #12]
 8000bae:	e7cd      	b.n	8000b4c <__smakebuf_r+0x18>
 8000bb0:	080009a1 	.word	0x080009a1

08000bb4 <_free_r>:
 8000bb4:	b538      	push	{r3, r4, r5, lr}
 8000bb6:	4605      	mov	r5, r0
 8000bb8:	2900      	cmp	r1, #0
 8000bba:	d045      	beq.n	8000c48 <_free_r+0x94>
 8000bbc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bc0:	1f0c      	subs	r4, r1, #4
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	bfb8      	it	lt
 8000bc6:	18e4      	addlt	r4, r4, r3
 8000bc8:	f000 fc0e 	bl	80013e8 <__malloc_lock>
 8000bcc:	4a1f      	ldr	r2, [pc, #124]	; (8000c4c <_free_r+0x98>)
 8000bce:	6813      	ldr	r3, [r2, #0]
 8000bd0:	4610      	mov	r0, r2
 8000bd2:	b933      	cbnz	r3, 8000be2 <_free_r+0x2e>
 8000bd4:	6063      	str	r3, [r4, #4]
 8000bd6:	6014      	str	r4, [r2, #0]
 8000bd8:	4628      	mov	r0, r5
 8000bda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bde:	f000 bc04 	b.w	80013ea <__malloc_unlock>
 8000be2:	42a3      	cmp	r3, r4
 8000be4:	d90c      	bls.n	8000c00 <_free_r+0x4c>
 8000be6:	6821      	ldr	r1, [r4, #0]
 8000be8:	1862      	adds	r2, r4, r1
 8000bea:	4293      	cmp	r3, r2
 8000bec:	bf04      	itt	eq
 8000bee:	681a      	ldreq	r2, [r3, #0]
 8000bf0:	685b      	ldreq	r3, [r3, #4]
 8000bf2:	6063      	str	r3, [r4, #4]
 8000bf4:	bf04      	itt	eq
 8000bf6:	1852      	addeq	r2, r2, r1
 8000bf8:	6022      	streq	r2, [r4, #0]
 8000bfa:	6004      	str	r4, [r0, #0]
 8000bfc:	e7ec      	b.n	8000bd8 <_free_r+0x24>
 8000bfe:	4613      	mov	r3, r2
 8000c00:	685a      	ldr	r2, [r3, #4]
 8000c02:	b10a      	cbz	r2, 8000c08 <_free_r+0x54>
 8000c04:	42a2      	cmp	r2, r4
 8000c06:	d9fa      	bls.n	8000bfe <_free_r+0x4a>
 8000c08:	6819      	ldr	r1, [r3, #0]
 8000c0a:	1858      	adds	r0, r3, r1
 8000c0c:	42a0      	cmp	r0, r4
 8000c0e:	d10b      	bne.n	8000c28 <_free_r+0x74>
 8000c10:	6820      	ldr	r0, [r4, #0]
 8000c12:	4401      	add	r1, r0
 8000c14:	1858      	adds	r0, r3, r1
 8000c16:	4282      	cmp	r2, r0
 8000c18:	6019      	str	r1, [r3, #0]
 8000c1a:	d1dd      	bne.n	8000bd8 <_free_r+0x24>
 8000c1c:	6810      	ldr	r0, [r2, #0]
 8000c1e:	6852      	ldr	r2, [r2, #4]
 8000c20:	605a      	str	r2, [r3, #4]
 8000c22:	4401      	add	r1, r0
 8000c24:	6019      	str	r1, [r3, #0]
 8000c26:	e7d7      	b.n	8000bd8 <_free_r+0x24>
 8000c28:	d902      	bls.n	8000c30 <_free_r+0x7c>
 8000c2a:	230c      	movs	r3, #12
 8000c2c:	602b      	str	r3, [r5, #0]
 8000c2e:	e7d3      	b.n	8000bd8 <_free_r+0x24>
 8000c30:	6820      	ldr	r0, [r4, #0]
 8000c32:	1821      	adds	r1, r4, r0
 8000c34:	428a      	cmp	r2, r1
 8000c36:	bf04      	itt	eq
 8000c38:	6811      	ldreq	r1, [r2, #0]
 8000c3a:	6852      	ldreq	r2, [r2, #4]
 8000c3c:	6062      	str	r2, [r4, #4]
 8000c3e:	bf04      	itt	eq
 8000c40:	1809      	addeq	r1, r1, r0
 8000c42:	6021      	streq	r1, [r4, #0]
 8000c44:	605c      	str	r4, [r3, #4]
 8000c46:	e7c7      	b.n	8000bd8 <_free_r+0x24>
 8000c48:	bd38      	pop	{r3, r4, r5, pc}
 8000c4a:	bf00      	nop
 8000c4c:	20000084 	.word	0x20000084

08000c50 <_malloc_r>:
 8000c50:	b570      	push	{r4, r5, r6, lr}
 8000c52:	1ccd      	adds	r5, r1, #3
 8000c54:	f025 0503 	bic.w	r5, r5, #3
 8000c58:	3508      	adds	r5, #8
 8000c5a:	2d0c      	cmp	r5, #12
 8000c5c:	bf38      	it	cc
 8000c5e:	250c      	movcc	r5, #12
 8000c60:	2d00      	cmp	r5, #0
 8000c62:	4606      	mov	r6, r0
 8000c64:	db01      	blt.n	8000c6a <_malloc_r+0x1a>
 8000c66:	42a9      	cmp	r1, r5
 8000c68:	d903      	bls.n	8000c72 <_malloc_r+0x22>
 8000c6a:	230c      	movs	r3, #12
 8000c6c:	6033      	str	r3, [r6, #0]
 8000c6e:	2000      	movs	r0, #0
 8000c70:	bd70      	pop	{r4, r5, r6, pc}
 8000c72:	f000 fbb9 	bl	80013e8 <__malloc_lock>
 8000c76:	4a21      	ldr	r2, [pc, #132]	; (8000cfc <_malloc_r+0xac>)
 8000c78:	6814      	ldr	r4, [r2, #0]
 8000c7a:	4621      	mov	r1, r4
 8000c7c:	b991      	cbnz	r1, 8000ca4 <_malloc_r+0x54>
 8000c7e:	4c20      	ldr	r4, [pc, #128]	; (8000d00 <_malloc_r+0xb0>)
 8000c80:	6823      	ldr	r3, [r4, #0]
 8000c82:	b91b      	cbnz	r3, 8000c8c <_malloc_r+0x3c>
 8000c84:	4630      	mov	r0, r6
 8000c86:	f000 fb05 	bl	8001294 <_sbrk_r>
 8000c8a:	6020      	str	r0, [r4, #0]
 8000c8c:	4629      	mov	r1, r5
 8000c8e:	4630      	mov	r0, r6
 8000c90:	f000 fb00 	bl	8001294 <_sbrk_r>
 8000c94:	1c43      	adds	r3, r0, #1
 8000c96:	d124      	bne.n	8000ce2 <_malloc_r+0x92>
 8000c98:	230c      	movs	r3, #12
 8000c9a:	6033      	str	r3, [r6, #0]
 8000c9c:	4630      	mov	r0, r6
 8000c9e:	f000 fba4 	bl	80013ea <__malloc_unlock>
 8000ca2:	e7e4      	b.n	8000c6e <_malloc_r+0x1e>
 8000ca4:	680b      	ldr	r3, [r1, #0]
 8000ca6:	1b5b      	subs	r3, r3, r5
 8000ca8:	d418      	bmi.n	8000cdc <_malloc_r+0x8c>
 8000caa:	2b0b      	cmp	r3, #11
 8000cac:	d90f      	bls.n	8000cce <_malloc_r+0x7e>
 8000cae:	600b      	str	r3, [r1, #0]
 8000cb0:	50cd      	str	r5, [r1, r3]
 8000cb2:	18cc      	adds	r4, r1, r3
 8000cb4:	4630      	mov	r0, r6
 8000cb6:	f000 fb98 	bl	80013ea <__malloc_unlock>
 8000cba:	f104 000b 	add.w	r0, r4, #11
 8000cbe:	1d23      	adds	r3, r4, #4
 8000cc0:	f020 0007 	bic.w	r0, r0, #7
 8000cc4:	1ac3      	subs	r3, r0, r3
 8000cc6:	d0d3      	beq.n	8000c70 <_malloc_r+0x20>
 8000cc8:	425a      	negs	r2, r3
 8000cca:	50e2      	str	r2, [r4, r3]
 8000ccc:	e7d0      	b.n	8000c70 <_malloc_r+0x20>
 8000cce:	428c      	cmp	r4, r1
 8000cd0:	684b      	ldr	r3, [r1, #4]
 8000cd2:	bf16      	itet	ne
 8000cd4:	6063      	strne	r3, [r4, #4]
 8000cd6:	6013      	streq	r3, [r2, #0]
 8000cd8:	460c      	movne	r4, r1
 8000cda:	e7eb      	b.n	8000cb4 <_malloc_r+0x64>
 8000cdc:	460c      	mov	r4, r1
 8000cde:	6849      	ldr	r1, [r1, #4]
 8000ce0:	e7cc      	b.n	8000c7c <_malloc_r+0x2c>
 8000ce2:	1cc4      	adds	r4, r0, #3
 8000ce4:	f024 0403 	bic.w	r4, r4, #3
 8000ce8:	42a0      	cmp	r0, r4
 8000cea:	d005      	beq.n	8000cf8 <_malloc_r+0xa8>
 8000cec:	1a21      	subs	r1, r4, r0
 8000cee:	4630      	mov	r0, r6
 8000cf0:	f000 fad0 	bl	8001294 <_sbrk_r>
 8000cf4:	3001      	adds	r0, #1
 8000cf6:	d0cf      	beq.n	8000c98 <_malloc_r+0x48>
 8000cf8:	6025      	str	r5, [r4, #0]
 8000cfa:	e7db      	b.n	8000cb4 <_malloc_r+0x64>
 8000cfc:	20000084 	.word	0x20000084
 8000d00:	20000088 	.word	0x20000088

08000d04 <__sfputc_r>:
 8000d04:	6893      	ldr	r3, [r2, #8]
 8000d06:	3b01      	subs	r3, #1
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	b410      	push	{r4}
 8000d0c:	6093      	str	r3, [r2, #8]
 8000d0e:	da08      	bge.n	8000d22 <__sfputc_r+0x1e>
 8000d10:	6994      	ldr	r4, [r2, #24]
 8000d12:	42a3      	cmp	r3, r4
 8000d14:	db01      	blt.n	8000d1a <__sfputc_r+0x16>
 8000d16:	290a      	cmp	r1, #10
 8000d18:	d103      	bne.n	8000d22 <__sfputc_r+0x1e>
 8000d1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d1e:	f7ff bcab 	b.w	8000678 <__swbuf_r>
 8000d22:	6813      	ldr	r3, [r2, #0]
 8000d24:	1c58      	adds	r0, r3, #1
 8000d26:	6010      	str	r0, [r2, #0]
 8000d28:	7019      	strb	r1, [r3, #0]
 8000d2a:	4608      	mov	r0, r1
 8000d2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d30:	4770      	bx	lr

08000d32 <__sfputs_r>:
 8000d32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d34:	4606      	mov	r6, r0
 8000d36:	460f      	mov	r7, r1
 8000d38:	4614      	mov	r4, r2
 8000d3a:	18d5      	adds	r5, r2, r3
 8000d3c:	42ac      	cmp	r4, r5
 8000d3e:	d101      	bne.n	8000d44 <__sfputs_r+0x12>
 8000d40:	2000      	movs	r0, #0
 8000d42:	e007      	b.n	8000d54 <__sfputs_r+0x22>
 8000d44:	463a      	mov	r2, r7
 8000d46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d4a:	4630      	mov	r0, r6
 8000d4c:	f7ff ffda 	bl	8000d04 <__sfputc_r>
 8000d50:	1c43      	adds	r3, r0, #1
 8000d52:	d1f3      	bne.n	8000d3c <__sfputs_r+0xa>
 8000d54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d58 <_vfiprintf_r>:
 8000d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d5c:	460c      	mov	r4, r1
 8000d5e:	b09d      	sub	sp, #116	; 0x74
 8000d60:	4617      	mov	r7, r2
 8000d62:	461d      	mov	r5, r3
 8000d64:	4606      	mov	r6, r0
 8000d66:	b118      	cbz	r0, 8000d70 <_vfiprintf_r+0x18>
 8000d68:	6983      	ldr	r3, [r0, #24]
 8000d6a:	b90b      	cbnz	r3, 8000d70 <_vfiprintf_r+0x18>
 8000d6c:	f7ff fe34 	bl	80009d8 <__sinit>
 8000d70:	4b7c      	ldr	r3, [pc, #496]	; (8000f64 <_vfiprintf_r+0x20c>)
 8000d72:	429c      	cmp	r4, r3
 8000d74:	d158      	bne.n	8000e28 <_vfiprintf_r+0xd0>
 8000d76:	6874      	ldr	r4, [r6, #4]
 8000d78:	89a3      	ldrh	r3, [r4, #12]
 8000d7a:	0718      	lsls	r0, r3, #28
 8000d7c:	d55e      	bpl.n	8000e3c <_vfiprintf_r+0xe4>
 8000d7e:	6923      	ldr	r3, [r4, #16]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d05b      	beq.n	8000e3c <_vfiprintf_r+0xe4>
 8000d84:	2300      	movs	r3, #0
 8000d86:	9309      	str	r3, [sp, #36]	; 0x24
 8000d88:	2320      	movs	r3, #32
 8000d8a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d8e:	2330      	movs	r3, #48	; 0x30
 8000d90:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d94:	9503      	str	r5, [sp, #12]
 8000d96:	f04f 0b01 	mov.w	fp, #1
 8000d9a:	46b8      	mov	r8, r7
 8000d9c:	4645      	mov	r5, r8
 8000d9e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000da2:	b10b      	cbz	r3, 8000da8 <_vfiprintf_r+0x50>
 8000da4:	2b25      	cmp	r3, #37	; 0x25
 8000da6:	d154      	bne.n	8000e52 <_vfiprintf_r+0xfa>
 8000da8:	ebb8 0a07 	subs.w	sl, r8, r7
 8000dac:	d00b      	beq.n	8000dc6 <_vfiprintf_r+0x6e>
 8000dae:	4653      	mov	r3, sl
 8000db0:	463a      	mov	r2, r7
 8000db2:	4621      	mov	r1, r4
 8000db4:	4630      	mov	r0, r6
 8000db6:	f7ff ffbc 	bl	8000d32 <__sfputs_r>
 8000dba:	3001      	adds	r0, #1
 8000dbc:	f000 80c2 	beq.w	8000f44 <_vfiprintf_r+0x1ec>
 8000dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000dc2:	4453      	add	r3, sl
 8000dc4:	9309      	str	r3, [sp, #36]	; 0x24
 8000dc6:	f898 3000 	ldrb.w	r3, [r8]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	f000 80ba 	beq.w	8000f44 <_vfiprintf_r+0x1ec>
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	f04f 32ff 	mov.w	r2, #4294967295
 8000dd6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000dda:	9304      	str	r3, [sp, #16]
 8000ddc:	9307      	str	r3, [sp, #28]
 8000dde:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000de2:	931a      	str	r3, [sp, #104]	; 0x68
 8000de4:	46a8      	mov	r8, r5
 8000de6:	2205      	movs	r2, #5
 8000de8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000dec:	485e      	ldr	r0, [pc, #376]	; (8000f68 <_vfiprintf_r+0x210>)
 8000dee:	f7ff f9ff 	bl	80001f0 <memchr>
 8000df2:	9b04      	ldr	r3, [sp, #16]
 8000df4:	bb78      	cbnz	r0, 8000e56 <_vfiprintf_r+0xfe>
 8000df6:	06d9      	lsls	r1, r3, #27
 8000df8:	bf44      	itt	mi
 8000dfa:	2220      	movmi	r2, #32
 8000dfc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e00:	071a      	lsls	r2, r3, #28
 8000e02:	bf44      	itt	mi
 8000e04:	222b      	movmi	r2, #43	; 0x2b
 8000e06:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e0a:	782a      	ldrb	r2, [r5, #0]
 8000e0c:	2a2a      	cmp	r2, #42	; 0x2a
 8000e0e:	d02a      	beq.n	8000e66 <_vfiprintf_r+0x10e>
 8000e10:	9a07      	ldr	r2, [sp, #28]
 8000e12:	46a8      	mov	r8, r5
 8000e14:	2000      	movs	r0, #0
 8000e16:	250a      	movs	r5, #10
 8000e18:	4641      	mov	r1, r8
 8000e1a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e1e:	3b30      	subs	r3, #48	; 0x30
 8000e20:	2b09      	cmp	r3, #9
 8000e22:	d969      	bls.n	8000ef8 <_vfiprintf_r+0x1a0>
 8000e24:	b360      	cbz	r0, 8000e80 <_vfiprintf_r+0x128>
 8000e26:	e024      	b.n	8000e72 <_vfiprintf_r+0x11a>
 8000e28:	4b50      	ldr	r3, [pc, #320]	; (8000f6c <_vfiprintf_r+0x214>)
 8000e2a:	429c      	cmp	r4, r3
 8000e2c:	d101      	bne.n	8000e32 <_vfiprintf_r+0xda>
 8000e2e:	68b4      	ldr	r4, [r6, #8]
 8000e30:	e7a2      	b.n	8000d78 <_vfiprintf_r+0x20>
 8000e32:	4b4f      	ldr	r3, [pc, #316]	; (8000f70 <_vfiprintf_r+0x218>)
 8000e34:	429c      	cmp	r4, r3
 8000e36:	bf08      	it	eq
 8000e38:	68f4      	ldreq	r4, [r6, #12]
 8000e3a:	e79d      	b.n	8000d78 <_vfiprintf_r+0x20>
 8000e3c:	4621      	mov	r1, r4
 8000e3e:	4630      	mov	r0, r6
 8000e40:	f7ff fc6c 	bl	800071c <__swsetup_r>
 8000e44:	2800      	cmp	r0, #0
 8000e46:	d09d      	beq.n	8000d84 <_vfiprintf_r+0x2c>
 8000e48:	f04f 30ff 	mov.w	r0, #4294967295
 8000e4c:	b01d      	add	sp, #116	; 0x74
 8000e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e52:	46a8      	mov	r8, r5
 8000e54:	e7a2      	b.n	8000d9c <_vfiprintf_r+0x44>
 8000e56:	4a44      	ldr	r2, [pc, #272]	; (8000f68 <_vfiprintf_r+0x210>)
 8000e58:	1a80      	subs	r0, r0, r2
 8000e5a:	fa0b f000 	lsl.w	r0, fp, r0
 8000e5e:	4318      	orrs	r0, r3
 8000e60:	9004      	str	r0, [sp, #16]
 8000e62:	4645      	mov	r5, r8
 8000e64:	e7be      	b.n	8000de4 <_vfiprintf_r+0x8c>
 8000e66:	9a03      	ldr	r2, [sp, #12]
 8000e68:	1d11      	adds	r1, r2, #4
 8000e6a:	6812      	ldr	r2, [r2, #0]
 8000e6c:	9103      	str	r1, [sp, #12]
 8000e6e:	2a00      	cmp	r2, #0
 8000e70:	db01      	blt.n	8000e76 <_vfiprintf_r+0x11e>
 8000e72:	9207      	str	r2, [sp, #28]
 8000e74:	e004      	b.n	8000e80 <_vfiprintf_r+0x128>
 8000e76:	4252      	negs	r2, r2
 8000e78:	f043 0302 	orr.w	r3, r3, #2
 8000e7c:	9207      	str	r2, [sp, #28]
 8000e7e:	9304      	str	r3, [sp, #16]
 8000e80:	f898 3000 	ldrb.w	r3, [r8]
 8000e84:	2b2e      	cmp	r3, #46	; 0x2e
 8000e86:	d10e      	bne.n	8000ea6 <_vfiprintf_r+0x14e>
 8000e88:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000e8c:	2b2a      	cmp	r3, #42	; 0x2a
 8000e8e:	d138      	bne.n	8000f02 <_vfiprintf_r+0x1aa>
 8000e90:	9b03      	ldr	r3, [sp, #12]
 8000e92:	1d1a      	adds	r2, r3, #4
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	9203      	str	r2, [sp, #12]
 8000e98:	2b00      	cmp	r3, #0
 8000e9a:	bfb8      	it	lt
 8000e9c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ea0:	f108 0802 	add.w	r8, r8, #2
 8000ea4:	9305      	str	r3, [sp, #20]
 8000ea6:	4d33      	ldr	r5, [pc, #204]	; (8000f74 <_vfiprintf_r+0x21c>)
 8000ea8:	f898 1000 	ldrb.w	r1, [r8]
 8000eac:	2203      	movs	r2, #3
 8000eae:	4628      	mov	r0, r5
 8000eb0:	f7ff f99e 	bl	80001f0 <memchr>
 8000eb4:	b140      	cbz	r0, 8000ec8 <_vfiprintf_r+0x170>
 8000eb6:	2340      	movs	r3, #64	; 0x40
 8000eb8:	1b40      	subs	r0, r0, r5
 8000eba:	fa03 f000 	lsl.w	r0, r3, r0
 8000ebe:	9b04      	ldr	r3, [sp, #16]
 8000ec0:	4303      	orrs	r3, r0
 8000ec2:	f108 0801 	add.w	r8, r8, #1
 8000ec6:	9304      	str	r3, [sp, #16]
 8000ec8:	f898 1000 	ldrb.w	r1, [r8]
 8000ecc:	482a      	ldr	r0, [pc, #168]	; (8000f78 <_vfiprintf_r+0x220>)
 8000ece:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ed2:	2206      	movs	r2, #6
 8000ed4:	f108 0701 	add.w	r7, r8, #1
 8000ed8:	f7ff f98a 	bl	80001f0 <memchr>
 8000edc:	2800      	cmp	r0, #0
 8000ede:	d037      	beq.n	8000f50 <_vfiprintf_r+0x1f8>
 8000ee0:	4b26      	ldr	r3, [pc, #152]	; (8000f7c <_vfiprintf_r+0x224>)
 8000ee2:	bb1b      	cbnz	r3, 8000f2c <_vfiprintf_r+0x1d4>
 8000ee4:	9b03      	ldr	r3, [sp, #12]
 8000ee6:	3307      	adds	r3, #7
 8000ee8:	f023 0307 	bic.w	r3, r3, #7
 8000eec:	3308      	adds	r3, #8
 8000eee:	9303      	str	r3, [sp, #12]
 8000ef0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ef2:	444b      	add	r3, r9
 8000ef4:	9309      	str	r3, [sp, #36]	; 0x24
 8000ef6:	e750      	b.n	8000d9a <_vfiprintf_r+0x42>
 8000ef8:	fb05 3202 	mla	r2, r5, r2, r3
 8000efc:	2001      	movs	r0, #1
 8000efe:	4688      	mov	r8, r1
 8000f00:	e78a      	b.n	8000e18 <_vfiprintf_r+0xc0>
 8000f02:	2300      	movs	r3, #0
 8000f04:	f108 0801 	add.w	r8, r8, #1
 8000f08:	9305      	str	r3, [sp, #20]
 8000f0a:	4619      	mov	r1, r3
 8000f0c:	250a      	movs	r5, #10
 8000f0e:	4640      	mov	r0, r8
 8000f10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f14:	3a30      	subs	r2, #48	; 0x30
 8000f16:	2a09      	cmp	r2, #9
 8000f18:	d903      	bls.n	8000f22 <_vfiprintf_r+0x1ca>
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d0c3      	beq.n	8000ea6 <_vfiprintf_r+0x14e>
 8000f1e:	9105      	str	r1, [sp, #20]
 8000f20:	e7c1      	b.n	8000ea6 <_vfiprintf_r+0x14e>
 8000f22:	fb05 2101 	mla	r1, r5, r1, r2
 8000f26:	2301      	movs	r3, #1
 8000f28:	4680      	mov	r8, r0
 8000f2a:	e7f0      	b.n	8000f0e <_vfiprintf_r+0x1b6>
 8000f2c:	ab03      	add	r3, sp, #12
 8000f2e:	9300      	str	r3, [sp, #0]
 8000f30:	4622      	mov	r2, r4
 8000f32:	4b13      	ldr	r3, [pc, #76]	; (8000f80 <_vfiprintf_r+0x228>)
 8000f34:	a904      	add	r1, sp, #16
 8000f36:	4630      	mov	r0, r6
 8000f38:	f3af 8000 	nop.w
 8000f3c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000f40:	4681      	mov	r9, r0
 8000f42:	d1d5      	bne.n	8000ef0 <_vfiprintf_r+0x198>
 8000f44:	89a3      	ldrh	r3, [r4, #12]
 8000f46:	065b      	lsls	r3, r3, #25
 8000f48:	f53f af7e 	bmi.w	8000e48 <_vfiprintf_r+0xf0>
 8000f4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f4e:	e77d      	b.n	8000e4c <_vfiprintf_r+0xf4>
 8000f50:	ab03      	add	r3, sp, #12
 8000f52:	9300      	str	r3, [sp, #0]
 8000f54:	4622      	mov	r2, r4
 8000f56:	4b0a      	ldr	r3, [pc, #40]	; (8000f80 <_vfiprintf_r+0x228>)
 8000f58:	a904      	add	r1, sp, #16
 8000f5a:	4630      	mov	r0, r6
 8000f5c:	f000 f888 	bl	8001070 <_printf_i>
 8000f60:	e7ec      	b.n	8000f3c <_vfiprintf_r+0x1e4>
 8000f62:	bf00      	nop
 8000f64:	08001478 	.word	0x08001478
 8000f68:	080014b8 	.word	0x080014b8
 8000f6c:	08001498 	.word	0x08001498
 8000f70:	08001458 	.word	0x08001458
 8000f74:	080014be 	.word	0x080014be
 8000f78:	080014c2 	.word	0x080014c2
 8000f7c:	00000000 	.word	0x00000000
 8000f80:	08000d33 	.word	0x08000d33

08000f84 <_printf_common>:
 8000f84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f88:	4691      	mov	r9, r2
 8000f8a:	461f      	mov	r7, r3
 8000f8c:	688a      	ldr	r2, [r1, #8]
 8000f8e:	690b      	ldr	r3, [r1, #16]
 8000f90:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f94:	4293      	cmp	r3, r2
 8000f96:	bfb8      	it	lt
 8000f98:	4613      	movlt	r3, r2
 8000f9a:	f8c9 3000 	str.w	r3, [r9]
 8000f9e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000fa2:	4606      	mov	r6, r0
 8000fa4:	460c      	mov	r4, r1
 8000fa6:	b112      	cbz	r2, 8000fae <_printf_common+0x2a>
 8000fa8:	3301      	adds	r3, #1
 8000faa:	f8c9 3000 	str.w	r3, [r9]
 8000fae:	6823      	ldr	r3, [r4, #0]
 8000fb0:	0699      	lsls	r1, r3, #26
 8000fb2:	bf42      	ittt	mi
 8000fb4:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000fb8:	3302      	addmi	r3, #2
 8000fba:	f8c9 3000 	strmi.w	r3, [r9]
 8000fbe:	6825      	ldr	r5, [r4, #0]
 8000fc0:	f015 0506 	ands.w	r5, r5, #6
 8000fc4:	d107      	bne.n	8000fd6 <_printf_common+0x52>
 8000fc6:	f104 0a19 	add.w	sl, r4, #25
 8000fca:	68e3      	ldr	r3, [r4, #12]
 8000fcc:	f8d9 2000 	ldr.w	r2, [r9]
 8000fd0:	1a9b      	subs	r3, r3, r2
 8000fd2:	42ab      	cmp	r3, r5
 8000fd4:	dc28      	bgt.n	8001028 <_printf_common+0xa4>
 8000fd6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000fda:	6822      	ldr	r2, [r4, #0]
 8000fdc:	3300      	adds	r3, #0
 8000fde:	bf18      	it	ne
 8000fe0:	2301      	movne	r3, #1
 8000fe2:	0692      	lsls	r2, r2, #26
 8000fe4:	d42d      	bmi.n	8001042 <_printf_common+0xbe>
 8000fe6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000fea:	4639      	mov	r1, r7
 8000fec:	4630      	mov	r0, r6
 8000fee:	47c0      	blx	r8
 8000ff0:	3001      	adds	r0, #1
 8000ff2:	d020      	beq.n	8001036 <_printf_common+0xb2>
 8000ff4:	6823      	ldr	r3, [r4, #0]
 8000ff6:	68e5      	ldr	r5, [r4, #12]
 8000ff8:	f8d9 2000 	ldr.w	r2, [r9]
 8000ffc:	f003 0306 	and.w	r3, r3, #6
 8001000:	2b04      	cmp	r3, #4
 8001002:	bf08      	it	eq
 8001004:	1aad      	subeq	r5, r5, r2
 8001006:	68a3      	ldr	r3, [r4, #8]
 8001008:	6922      	ldr	r2, [r4, #16]
 800100a:	bf0c      	ite	eq
 800100c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001010:	2500      	movne	r5, #0
 8001012:	4293      	cmp	r3, r2
 8001014:	bfc4      	itt	gt
 8001016:	1a9b      	subgt	r3, r3, r2
 8001018:	18ed      	addgt	r5, r5, r3
 800101a:	f04f 0900 	mov.w	r9, #0
 800101e:	341a      	adds	r4, #26
 8001020:	454d      	cmp	r5, r9
 8001022:	d11a      	bne.n	800105a <_printf_common+0xd6>
 8001024:	2000      	movs	r0, #0
 8001026:	e008      	b.n	800103a <_printf_common+0xb6>
 8001028:	2301      	movs	r3, #1
 800102a:	4652      	mov	r2, sl
 800102c:	4639      	mov	r1, r7
 800102e:	4630      	mov	r0, r6
 8001030:	47c0      	blx	r8
 8001032:	3001      	adds	r0, #1
 8001034:	d103      	bne.n	800103e <_printf_common+0xba>
 8001036:	f04f 30ff 	mov.w	r0, #4294967295
 800103a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800103e:	3501      	adds	r5, #1
 8001040:	e7c3      	b.n	8000fca <_printf_common+0x46>
 8001042:	18e1      	adds	r1, r4, r3
 8001044:	1c5a      	adds	r2, r3, #1
 8001046:	2030      	movs	r0, #48	; 0x30
 8001048:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800104c:	4422      	add	r2, r4
 800104e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001052:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001056:	3302      	adds	r3, #2
 8001058:	e7c5      	b.n	8000fe6 <_printf_common+0x62>
 800105a:	2301      	movs	r3, #1
 800105c:	4622      	mov	r2, r4
 800105e:	4639      	mov	r1, r7
 8001060:	4630      	mov	r0, r6
 8001062:	47c0      	blx	r8
 8001064:	3001      	adds	r0, #1
 8001066:	d0e6      	beq.n	8001036 <_printf_common+0xb2>
 8001068:	f109 0901 	add.w	r9, r9, #1
 800106c:	e7d8      	b.n	8001020 <_printf_common+0x9c>
	...

08001070 <_printf_i>:
 8001070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001074:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001078:	460c      	mov	r4, r1
 800107a:	7e09      	ldrb	r1, [r1, #24]
 800107c:	b085      	sub	sp, #20
 800107e:	296e      	cmp	r1, #110	; 0x6e
 8001080:	4617      	mov	r7, r2
 8001082:	4606      	mov	r6, r0
 8001084:	4698      	mov	r8, r3
 8001086:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001088:	f000 80b3 	beq.w	80011f2 <_printf_i+0x182>
 800108c:	d822      	bhi.n	80010d4 <_printf_i+0x64>
 800108e:	2963      	cmp	r1, #99	; 0x63
 8001090:	d036      	beq.n	8001100 <_printf_i+0x90>
 8001092:	d80a      	bhi.n	80010aa <_printf_i+0x3a>
 8001094:	2900      	cmp	r1, #0
 8001096:	f000 80b9 	beq.w	800120c <_printf_i+0x19c>
 800109a:	2958      	cmp	r1, #88	; 0x58
 800109c:	f000 8083 	beq.w	80011a6 <_printf_i+0x136>
 80010a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010a4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80010a8:	e032      	b.n	8001110 <_printf_i+0xa0>
 80010aa:	2964      	cmp	r1, #100	; 0x64
 80010ac:	d001      	beq.n	80010b2 <_printf_i+0x42>
 80010ae:	2969      	cmp	r1, #105	; 0x69
 80010b0:	d1f6      	bne.n	80010a0 <_printf_i+0x30>
 80010b2:	6820      	ldr	r0, [r4, #0]
 80010b4:	6813      	ldr	r3, [r2, #0]
 80010b6:	0605      	lsls	r5, r0, #24
 80010b8:	f103 0104 	add.w	r1, r3, #4
 80010bc:	d52a      	bpl.n	8001114 <_printf_i+0xa4>
 80010be:	681b      	ldr	r3, [r3, #0]
 80010c0:	6011      	str	r1, [r2, #0]
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	da03      	bge.n	80010ce <_printf_i+0x5e>
 80010c6:	222d      	movs	r2, #45	; 0x2d
 80010c8:	425b      	negs	r3, r3
 80010ca:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80010ce:	486f      	ldr	r0, [pc, #444]	; (800128c <_printf_i+0x21c>)
 80010d0:	220a      	movs	r2, #10
 80010d2:	e039      	b.n	8001148 <_printf_i+0xd8>
 80010d4:	2973      	cmp	r1, #115	; 0x73
 80010d6:	f000 809d 	beq.w	8001214 <_printf_i+0x1a4>
 80010da:	d808      	bhi.n	80010ee <_printf_i+0x7e>
 80010dc:	296f      	cmp	r1, #111	; 0x6f
 80010de:	d020      	beq.n	8001122 <_printf_i+0xb2>
 80010e0:	2970      	cmp	r1, #112	; 0x70
 80010e2:	d1dd      	bne.n	80010a0 <_printf_i+0x30>
 80010e4:	6823      	ldr	r3, [r4, #0]
 80010e6:	f043 0320 	orr.w	r3, r3, #32
 80010ea:	6023      	str	r3, [r4, #0]
 80010ec:	e003      	b.n	80010f6 <_printf_i+0x86>
 80010ee:	2975      	cmp	r1, #117	; 0x75
 80010f0:	d017      	beq.n	8001122 <_printf_i+0xb2>
 80010f2:	2978      	cmp	r1, #120	; 0x78
 80010f4:	d1d4      	bne.n	80010a0 <_printf_i+0x30>
 80010f6:	2378      	movs	r3, #120	; 0x78
 80010f8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80010fc:	4864      	ldr	r0, [pc, #400]	; (8001290 <_printf_i+0x220>)
 80010fe:	e055      	b.n	80011ac <_printf_i+0x13c>
 8001100:	6813      	ldr	r3, [r2, #0]
 8001102:	1d19      	adds	r1, r3, #4
 8001104:	681b      	ldr	r3, [r3, #0]
 8001106:	6011      	str	r1, [r2, #0]
 8001108:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800110c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001110:	2301      	movs	r3, #1
 8001112:	e08c      	b.n	800122e <_printf_i+0x1be>
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	6011      	str	r1, [r2, #0]
 8001118:	f010 0f40 	tst.w	r0, #64	; 0x40
 800111c:	bf18      	it	ne
 800111e:	b21b      	sxthne	r3, r3
 8001120:	e7cf      	b.n	80010c2 <_printf_i+0x52>
 8001122:	6813      	ldr	r3, [r2, #0]
 8001124:	6825      	ldr	r5, [r4, #0]
 8001126:	1d18      	adds	r0, r3, #4
 8001128:	6010      	str	r0, [r2, #0]
 800112a:	0628      	lsls	r0, r5, #24
 800112c:	d501      	bpl.n	8001132 <_printf_i+0xc2>
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	e002      	b.n	8001138 <_printf_i+0xc8>
 8001132:	0668      	lsls	r0, r5, #25
 8001134:	d5fb      	bpl.n	800112e <_printf_i+0xbe>
 8001136:	881b      	ldrh	r3, [r3, #0]
 8001138:	4854      	ldr	r0, [pc, #336]	; (800128c <_printf_i+0x21c>)
 800113a:	296f      	cmp	r1, #111	; 0x6f
 800113c:	bf14      	ite	ne
 800113e:	220a      	movne	r2, #10
 8001140:	2208      	moveq	r2, #8
 8001142:	2100      	movs	r1, #0
 8001144:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001148:	6865      	ldr	r5, [r4, #4]
 800114a:	60a5      	str	r5, [r4, #8]
 800114c:	2d00      	cmp	r5, #0
 800114e:	f2c0 8095 	blt.w	800127c <_printf_i+0x20c>
 8001152:	6821      	ldr	r1, [r4, #0]
 8001154:	f021 0104 	bic.w	r1, r1, #4
 8001158:	6021      	str	r1, [r4, #0]
 800115a:	2b00      	cmp	r3, #0
 800115c:	d13d      	bne.n	80011da <_printf_i+0x16a>
 800115e:	2d00      	cmp	r5, #0
 8001160:	f040 808e 	bne.w	8001280 <_printf_i+0x210>
 8001164:	4665      	mov	r5, ip
 8001166:	2a08      	cmp	r2, #8
 8001168:	d10b      	bne.n	8001182 <_printf_i+0x112>
 800116a:	6823      	ldr	r3, [r4, #0]
 800116c:	07db      	lsls	r3, r3, #31
 800116e:	d508      	bpl.n	8001182 <_printf_i+0x112>
 8001170:	6923      	ldr	r3, [r4, #16]
 8001172:	6862      	ldr	r2, [r4, #4]
 8001174:	429a      	cmp	r2, r3
 8001176:	bfde      	ittt	le
 8001178:	2330      	movle	r3, #48	; 0x30
 800117a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800117e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001182:	ebac 0305 	sub.w	r3, ip, r5
 8001186:	6123      	str	r3, [r4, #16]
 8001188:	f8cd 8000 	str.w	r8, [sp]
 800118c:	463b      	mov	r3, r7
 800118e:	aa03      	add	r2, sp, #12
 8001190:	4621      	mov	r1, r4
 8001192:	4630      	mov	r0, r6
 8001194:	f7ff fef6 	bl	8000f84 <_printf_common>
 8001198:	3001      	adds	r0, #1
 800119a:	d14d      	bne.n	8001238 <_printf_i+0x1c8>
 800119c:	f04f 30ff 	mov.w	r0, #4294967295
 80011a0:	b005      	add	sp, #20
 80011a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80011a6:	4839      	ldr	r0, [pc, #228]	; (800128c <_printf_i+0x21c>)
 80011a8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80011ac:	6813      	ldr	r3, [r2, #0]
 80011ae:	6821      	ldr	r1, [r4, #0]
 80011b0:	1d1d      	adds	r5, r3, #4
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	6015      	str	r5, [r2, #0]
 80011b6:	060a      	lsls	r2, r1, #24
 80011b8:	d50b      	bpl.n	80011d2 <_printf_i+0x162>
 80011ba:	07ca      	lsls	r2, r1, #31
 80011bc:	bf44      	itt	mi
 80011be:	f041 0120 	orrmi.w	r1, r1, #32
 80011c2:	6021      	strmi	r1, [r4, #0]
 80011c4:	b91b      	cbnz	r3, 80011ce <_printf_i+0x15e>
 80011c6:	6822      	ldr	r2, [r4, #0]
 80011c8:	f022 0220 	bic.w	r2, r2, #32
 80011cc:	6022      	str	r2, [r4, #0]
 80011ce:	2210      	movs	r2, #16
 80011d0:	e7b7      	b.n	8001142 <_printf_i+0xd2>
 80011d2:	064d      	lsls	r5, r1, #25
 80011d4:	bf48      	it	mi
 80011d6:	b29b      	uxthmi	r3, r3
 80011d8:	e7ef      	b.n	80011ba <_printf_i+0x14a>
 80011da:	4665      	mov	r5, ip
 80011dc:	fbb3 f1f2 	udiv	r1, r3, r2
 80011e0:	fb02 3311 	mls	r3, r2, r1, r3
 80011e4:	5cc3      	ldrb	r3, [r0, r3]
 80011e6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80011ea:	460b      	mov	r3, r1
 80011ec:	2900      	cmp	r1, #0
 80011ee:	d1f5      	bne.n	80011dc <_printf_i+0x16c>
 80011f0:	e7b9      	b.n	8001166 <_printf_i+0xf6>
 80011f2:	6813      	ldr	r3, [r2, #0]
 80011f4:	6825      	ldr	r5, [r4, #0]
 80011f6:	6961      	ldr	r1, [r4, #20]
 80011f8:	1d18      	adds	r0, r3, #4
 80011fa:	6010      	str	r0, [r2, #0]
 80011fc:	0628      	lsls	r0, r5, #24
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	d501      	bpl.n	8001206 <_printf_i+0x196>
 8001202:	6019      	str	r1, [r3, #0]
 8001204:	e002      	b.n	800120c <_printf_i+0x19c>
 8001206:	066a      	lsls	r2, r5, #25
 8001208:	d5fb      	bpl.n	8001202 <_printf_i+0x192>
 800120a:	8019      	strh	r1, [r3, #0]
 800120c:	2300      	movs	r3, #0
 800120e:	6123      	str	r3, [r4, #16]
 8001210:	4665      	mov	r5, ip
 8001212:	e7b9      	b.n	8001188 <_printf_i+0x118>
 8001214:	6813      	ldr	r3, [r2, #0]
 8001216:	1d19      	adds	r1, r3, #4
 8001218:	6011      	str	r1, [r2, #0]
 800121a:	681d      	ldr	r5, [r3, #0]
 800121c:	6862      	ldr	r2, [r4, #4]
 800121e:	2100      	movs	r1, #0
 8001220:	4628      	mov	r0, r5
 8001222:	f7fe ffe5 	bl	80001f0 <memchr>
 8001226:	b108      	cbz	r0, 800122c <_printf_i+0x1bc>
 8001228:	1b40      	subs	r0, r0, r5
 800122a:	6060      	str	r0, [r4, #4]
 800122c:	6863      	ldr	r3, [r4, #4]
 800122e:	6123      	str	r3, [r4, #16]
 8001230:	2300      	movs	r3, #0
 8001232:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001236:	e7a7      	b.n	8001188 <_printf_i+0x118>
 8001238:	6923      	ldr	r3, [r4, #16]
 800123a:	462a      	mov	r2, r5
 800123c:	4639      	mov	r1, r7
 800123e:	4630      	mov	r0, r6
 8001240:	47c0      	blx	r8
 8001242:	3001      	adds	r0, #1
 8001244:	d0aa      	beq.n	800119c <_printf_i+0x12c>
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	079b      	lsls	r3, r3, #30
 800124a:	d413      	bmi.n	8001274 <_printf_i+0x204>
 800124c:	68e0      	ldr	r0, [r4, #12]
 800124e:	9b03      	ldr	r3, [sp, #12]
 8001250:	4298      	cmp	r0, r3
 8001252:	bfb8      	it	lt
 8001254:	4618      	movlt	r0, r3
 8001256:	e7a3      	b.n	80011a0 <_printf_i+0x130>
 8001258:	2301      	movs	r3, #1
 800125a:	464a      	mov	r2, r9
 800125c:	4639      	mov	r1, r7
 800125e:	4630      	mov	r0, r6
 8001260:	47c0      	blx	r8
 8001262:	3001      	adds	r0, #1
 8001264:	d09a      	beq.n	800119c <_printf_i+0x12c>
 8001266:	3501      	adds	r5, #1
 8001268:	68e3      	ldr	r3, [r4, #12]
 800126a:	9a03      	ldr	r2, [sp, #12]
 800126c:	1a9b      	subs	r3, r3, r2
 800126e:	42ab      	cmp	r3, r5
 8001270:	dcf2      	bgt.n	8001258 <_printf_i+0x1e8>
 8001272:	e7eb      	b.n	800124c <_printf_i+0x1dc>
 8001274:	2500      	movs	r5, #0
 8001276:	f104 0919 	add.w	r9, r4, #25
 800127a:	e7f5      	b.n	8001268 <_printf_i+0x1f8>
 800127c:	2b00      	cmp	r3, #0
 800127e:	d1ac      	bne.n	80011da <_printf_i+0x16a>
 8001280:	7803      	ldrb	r3, [r0, #0]
 8001282:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001286:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800128a:	e76c      	b.n	8001166 <_printf_i+0xf6>
 800128c:	080014c9 	.word	0x080014c9
 8001290:	080014da 	.word	0x080014da

08001294 <_sbrk_r>:
 8001294:	b538      	push	{r3, r4, r5, lr}
 8001296:	4c06      	ldr	r4, [pc, #24]	; (80012b0 <_sbrk_r+0x1c>)
 8001298:	2300      	movs	r3, #0
 800129a:	4605      	mov	r5, r0
 800129c:	4608      	mov	r0, r1
 800129e:	6023      	str	r3, [r4, #0]
 80012a0:	f7ff f8e6 	bl	8000470 <_sbrk>
 80012a4:	1c43      	adds	r3, r0, #1
 80012a6:	d102      	bne.n	80012ae <_sbrk_r+0x1a>
 80012a8:	6823      	ldr	r3, [r4, #0]
 80012aa:	b103      	cbz	r3, 80012ae <_sbrk_r+0x1a>
 80012ac:	602b      	str	r3, [r5, #0]
 80012ae:	bd38      	pop	{r3, r4, r5, pc}
 80012b0:	2000008c 	.word	0x2000008c

080012b4 <__sread>:
 80012b4:	b510      	push	{r4, lr}
 80012b6:	460c      	mov	r4, r1
 80012b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012bc:	f000 f896 	bl	80013ec <_read_r>
 80012c0:	2800      	cmp	r0, #0
 80012c2:	bfab      	itete	ge
 80012c4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012c6:	89a3      	ldrhlt	r3, [r4, #12]
 80012c8:	181b      	addge	r3, r3, r0
 80012ca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012ce:	bfac      	ite	ge
 80012d0:	6563      	strge	r3, [r4, #84]	; 0x54
 80012d2:	81a3      	strhlt	r3, [r4, #12]
 80012d4:	bd10      	pop	{r4, pc}

080012d6 <__swrite>:
 80012d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012da:	461f      	mov	r7, r3
 80012dc:	898b      	ldrh	r3, [r1, #12]
 80012de:	05db      	lsls	r3, r3, #23
 80012e0:	4605      	mov	r5, r0
 80012e2:	460c      	mov	r4, r1
 80012e4:	4616      	mov	r6, r2
 80012e6:	d505      	bpl.n	80012f4 <__swrite+0x1e>
 80012e8:	2302      	movs	r3, #2
 80012ea:	2200      	movs	r2, #0
 80012ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012f0:	f000 f868 	bl	80013c4 <_lseek_r>
 80012f4:	89a3      	ldrh	r3, [r4, #12]
 80012f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012fe:	81a3      	strh	r3, [r4, #12]
 8001300:	4632      	mov	r2, r6
 8001302:	463b      	mov	r3, r7
 8001304:	4628      	mov	r0, r5
 8001306:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800130a:	f000 b817 	b.w	800133c <_write_r>

0800130e <__sseek>:
 800130e:	b510      	push	{r4, lr}
 8001310:	460c      	mov	r4, r1
 8001312:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001316:	f000 f855 	bl	80013c4 <_lseek_r>
 800131a:	1c43      	adds	r3, r0, #1
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	bf15      	itete	ne
 8001320:	6560      	strne	r0, [r4, #84]	; 0x54
 8001322:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001326:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800132a:	81a3      	strheq	r3, [r4, #12]
 800132c:	bf18      	it	ne
 800132e:	81a3      	strhne	r3, [r4, #12]
 8001330:	bd10      	pop	{r4, pc}

08001332 <__sclose>:
 8001332:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001336:	f000 b813 	b.w	8001360 <_close_r>
	...

0800133c <_write_r>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	4c07      	ldr	r4, [pc, #28]	; (800135c <_write_r+0x20>)
 8001340:	4605      	mov	r5, r0
 8001342:	4608      	mov	r0, r1
 8001344:	4611      	mov	r1, r2
 8001346:	2200      	movs	r2, #0
 8001348:	6022      	str	r2, [r4, #0]
 800134a:	461a      	mov	r2, r3
 800134c:	f7ff f83f 	bl	80003ce <_write>
 8001350:	1c43      	adds	r3, r0, #1
 8001352:	d102      	bne.n	800135a <_write_r+0x1e>
 8001354:	6823      	ldr	r3, [r4, #0]
 8001356:	b103      	cbz	r3, 800135a <_write_r+0x1e>
 8001358:	602b      	str	r3, [r5, #0]
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	2000008c 	.word	0x2000008c

08001360 <_close_r>:
 8001360:	b538      	push	{r3, r4, r5, lr}
 8001362:	4c06      	ldr	r4, [pc, #24]	; (800137c <_close_r+0x1c>)
 8001364:	2300      	movs	r3, #0
 8001366:	4605      	mov	r5, r0
 8001368:	4608      	mov	r0, r1
 800136a:	6023      	str	r3, [r4, #0]
 800136c:	f7ff f84b 	bl	8000406 <_close>
 8001370:	1c43      	adds	r3, r0, #1
 8001372:	d102      	bne.n	800137a <_close_r+0x1a>
 8001374:	6823      	ldr	r3, [r4, #0]
 8001376:	b103      	cbz	r3, 800137a <_close_r+0x1a>
 8001378:	602b      	str	r3, [r5, #0]
 800137a:	bd38      	pop	{r3, r4, r5, pc}
 800137c:	2000008c 	.word	0x2000008c

08001380 <_fstat_r>:
 8001380:	b538      	push	{r3, r4, r5, lr}
 8001382:	4c07      	ldr	r4, [pc, #28]	; (80013a0 <_fstat_r+0x20>)
 8001384:	2300      	movs	r3, #0
 8001386:	4605      	mov	r5, r0
 8001388:	4608      	mov	r0, r1
 800138a:	4611      	mov	r1, r2
 800138c:	6023      	str	r3, [r4, #0]
 800138e:	f7ff f846 	bl	800041e <_fstat>
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	d102      	bne.n	800139c <_fstat_r+0x1c>
 8001396:	6823      	ldr	r3, [r4, #0]
 8001398:	b103      	cbz	r3, 800139c <_fstat_r+0x1c>
 800139a:	602b      	str	r3, [r5, #0]
 800139c:	bd38      	pop	{r3, r4, r5, pc}
 800139e:	bf00      	nop
 80013a0:	2000008c 	.word	0x2000008c

080013a4 <_isatty_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4c06      	ldr	r4, [pc, #24]	; (80013c0 <_isatty_r+0x1c>)
 80013a8:	2300      	movs	r3, #0
 80013aa:	4605      	mov	r5, r0
 80013ac:	4608      	mov	r0, r1
 80013ae:	6023      	str	r3, [r4, #0]
 80013b0:	f7ff f845 	bl	800043e <_isatty>
 80013b4:	1c43      	adds	r3, r0, #1
 80013b6:	d102      	bne.n	80013be <_isatty_r+0x1a>
 80013b8:	6823      	ldr	r3, [r4, #0]
 80013ba:	b103      	cbz	r3, 80013be <_isatty_r+0x1a>
 80013bc:	602b      	str	r3, [r5, #0]
 80013be:	bd38      	pop	{r3, r4, r5, pc}
 80013c0:	2000008c 	.word	0x2000008c

080013c4 <_lseek_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4c07      	ldr	r4, [pc, #28]	; (80013e4 <_lseek_r+0x20>)
 80013c8:	4605      	mov	r5, r0
 80013ca:	4608      	mov	r0, r1
 80013cc:	4611      	mov	r1, r2
 80013ce:	2200      	movs	r2, #0
 80013d0:	6022      	str	r2, [r4, #0]
 80013d2:	461a      	mov	r2, r3
 80013d4:	f7ff f83e 	bl	8000454 <_lseek>
 80013d8:	1c43      	adds	r3, r0, #1
 80013da:	d102      	bne.n	80013e2 <_lseek_r+0x1e>
 80013dc:	6823      	ldr	r3, [r4, #0]
 80013de:	b103      	cbz	r3, 80013e2 <_lseek_r+0x1e>
 80013e0:	602b      	str	r3, [r5, #0]
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	2000008c 	.word	0x2000008c

080013e8 <__malloc_lock>:
 80013e8:	4770      	bx	lr

080013ea <__malloc_unlock>:
 80013ea:	4770      	bx	lr

080013ec <_read_r>:
 80013ec:	b538      	push	{r3, r4, r5, lr}
 80013ee:	4c07      	ldr	r4, [pc, #28]	; (800140c <_read_r+0x20>)
 80013f0:	4605      	mov	r5, r0
 80013f2:	4608      	mov	r0, r1
 80013f4:	4611      	mov	r1, r2
 80013f6:	2200      	movs	r2, #0
 80013f8:	6022      	str	r2, [r4, #0]
 80013fa:	461a      	mov	r2, r3
 80013fc:	f7fe ffca 	bl	8000394 <_read>
 8001400:	1c43      	adds	r3, r0, #1
 8001402:	d102      	bne.n	800140a <_read_r+0x1e>
 8001404:	6823      	ldr	r3, [r4, #0]
 8001406:	b103      	cbz	r3, 800140a <_read_r+0x1e>
 8001408:	602b      	str	r3, [r5, #0]
 800140a:	bd38      	pop	{r3, r4, r5, pc}
 800140c:	2000008c 	.word	0x2000008c

08001410 <_init>:
 8001410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001412:	bf00      	nop
 8001414:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001416:	bc08      	pop	{r3}
 8001418:	469e      	mov	lr, r3
 800141a:	4770      	bx	lr

0800141c <_fini>:
 800141c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800141e:	bf00      	nop
 8001420:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001422:	bc08      	pop	{r3}
 8001424:	469e      	mov	lr, r3
 8001426:	4770      	bx	lr
